{"ast":null,"code":"/**\n * A small util that is used to increment or decrement a number until it reaches\n * the max value or -1. When that happens, it will loop around to 0 or the max\n * value respectively. This does not work for different increment numbers or any\n * values below 0 for now.\n *\n * @internal\n * @param options - {@link LoopOptions}\n * @remarks \\@since 2.7.0 The `min` option was added and the arguments changed to an\n * object\n */\nexport function loop(_a) {\n  var value = _a.value,\n    _b = _a.min,\n    min = _b === void 0 ? 0 : _b,\n    max = _a.max,\n    increment = _a.increment,\n    _c = _a.minmax,\n    minmax = _c === void 0 ? false : _c;\n  var next = value + (increment ? 1 : -1);\n  if (minmax) {\n    next = Math.min(max, Math.max(min, next));\n  } else if (next > max) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n  return next;\n}","map":{"version":3,"mappings":"AAkCA;;;;;;;;;;;AAWA,OAAM,SAAUA,IAAI,CAACC,EAMP;MALZC,KAAK;IACLC,WAAO;IAAPC,GAAG,mBAAG,CAAC;IACPC,GAAG;IACHC,SAAS;IACTC,cAAc;IAAdC,MAAM,mBAAG,KAAK;EAEd,IAAIC,IAAI,GAAGP,KAAK,IAAII,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACvC,IAAIE,MAAM,EAAE;IACVC,IAAI,GAAGC,IAAI,CAACN,GAAG,CAACC,GAAG,EAAEK,IAAI,CAACL,GAAG,CAACD,GAAG,EAAEK,IAAI,CAAC,CAAC;GAC1C,MAAM,IAAIA,IAAI,GAAGJ,GAAG,EAAE;IACrBI,IAAI,GAAGL,GAAG;GACX,MAAM,IAAIK,IAAI,GAAGL,GAAG,EAAE;IACrBK,IAAI,GAAGJ,GAAG;;EAGZ,OAAOI,IAAI;AACb","names":["loop","_a","value","_b","min","max","increment","_c","minmax","next","Math"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/loop.ts"],"sourcesContent":["/**\n * @remarks \\@since 2.7.0\n */\nexport interface LoopOptions {\n  /**\n   * The current value that should be modified.\n   */\n  value: number;\n\n  /**\n   * An optional `min` value that can be used before looping to the `max` value.\n   *\n   * @defaultValue `0`\n   */\n  min?: number;\n\n  /**\n   * The max number that can be used before looping to the `min` value.\n   */\n  max: number;\n\n  /**\n   * Boolean if the `value` should be incremented or decremented by `1`.\n   */\n  increment: boolean;\n\n  /**\n   * Boolean if the looping should be ignored and only the `min`/`max` options\n   * should be respected. In other words, the looping  behavior will be disabled\n   * and the `value` must be: `min >= value <= max`\n   */\n  minmax?: boolean;\n}\n\n/**\n * A small util that is used to increment or decrement a number until it reaches\n * the max value or -1. When that happens, it will loop around to 0 or the max\n * value respectively. This does not work for different increment numbers or any\n * values below 0 for now.\n *\n * @internal\n * @param options - {@link LoopOptions}\n * @remarks \\@since 2.7.0 The `min` option was added and the arguments changed to an\n * object\n */\nexport function loop({\n  value,\n  min = 0,\n  max,\n  increment,\n  minmax = false,\n}: LoopOptions): number {\n  let next = value + (increment ? 1 : -1);\n  if (minmax) {\n    next = Math.min(max, Math.max(min, next));\n  } else if (next > max) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n\n  return next;\n}\n"]},"metadata":{},"sourceType":"module"}