{"ast":null,"code":"var warnedOnce = false;\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @internal\n */\nexport function defaultGetItemValue(item, valueKey) {\n  var result = item[valueKey];\n  if (process.env.NODE_ENV !== \"production\") {\n    var type = typeof result;\n    if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n      warnedOnce = true;\n      /* eslint-disable no-console */\n      console.warn(\"Unable to extract a string or number from an item within the tree for the item:\");\n      console.warn(item);\n      console.warn(\"\");\n      console.warn(\"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\");\n      console.warn(new Error().stack);\n    }\n  }\n  return \"\".concat(result);\n}","map":{"version":3,"mappings":"AAEA,IAAIA,UAAU,GAAG,KAAK;AAEtB;;;;;;;AAOA,OAAM,SAAUC,mBAAmB,CACjCC,IAAqB,EACrBC,QAAgB;EAEhB,IAAMC,MAAM,GAAGF,IAAI,CAACC,QAAQ,CAAC;EAC7B,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAMC,IAAI,GAAG,OAAOJ,MAAM;IAC1B,IAAI,CAACJ,UAAU,IAAIQ,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACzDR,UAAU,GAAG,IAAI;MACjB;MACAS,OAAO,CAACC,IAAI,CACV,iFAAiF,CAClF;MACDD,OAAO,CAACC,IAAI,CAACR,IAAI,CAAC;MAClBO,OAAO,CAACC,IAAI,CAAC,EAAE,CAAC;MAChBD,OAAO,CAACC,IAAI,CACV,2HAA2H,CAC5H;MACDD,OAAO,CAACC,IAAI,CAAC,IAAIC,KAAK,EAAE,CAACC,KAAK,CAAC;;;EAInC,OAAO,UAAGR,MAAM,CAAE;AACpB","names":["warnedOnce","defaultGetItemValue","item","valueKey","result","process","env","NODE_ENV","type","console","warn","Error","stack"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/tree/src/defaultGetItemValue.ts"],"sourcesContent":["import type { UnknownTreeItem } from \"./types\";\n\nlet warnedOnce = false;\n\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @internal\n */\nexport function defaultGetItemValue(\n  item: UnknownTreeItem,\n  valueKey: string\n): string {\n  const result = item[valueKey];\n  if (process.env.NODE_ENV !== \"production\") {\n    const type = typeof result;\n    if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n      warnedOnce = true;\n      /* eslint-disable no-console */\n      console.warn(\n        \"Unable to extract a string or number from an item within the tree for the item:\"\n      );\n      console.warn(item);\n      console.warn(\"\");\n      console.warn(\n        \"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\"\n      );\n      console.warn(new Error().stack);\n    }\n  }\n\n  return `${result}`;\n}\n"]},"metadata":{},"sourceType":"module"}