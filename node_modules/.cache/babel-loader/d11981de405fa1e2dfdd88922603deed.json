{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useCallback, useState } from \"react\";\n/**\n * This hook can be used to implement simple drag-and-drop behavior for file\n * uploads or special styles while dragging an element over a part of a page.\n *\n * @example\n * Simple File\n * ```ts\n * const style: CSSProperties = {\n *   border: '1px solid blue',\n * };\n *\n * function Example(): ReactElement {\n *   const { onDrop } = useFileUpload()\n *   const [isOver, handlers] = useDropzone({\n *     onDrop: (event) => {\n *       // normally use the `onDrop` behavior from `useFileUpload` to upload\n *       // files:\n *       // onDrop(event);\n *     }\n *   });\n *\n *   return (\n *     <div {...handlers} style={isOver ? style : {}}>\n *       Drag and drop some files!\n *       {isOver && <UploadSVGIcon />}\n *     </div>\n *   );\n * }\n * ```\n *\n * @see {@link useFileUpload} for a more complex example\n * @param options - The {@link DropzoneHandlers} that can be merged with the\n * default functionality.\n * @returns the {@link DropzoneHookReturnValue}\n * @remarks \\@since 2.9.0\n */\nexport function useDropzone(options) {\n  var propOnDragEnter = options.onDragEnter,\n    propOnDragOver = options.onDragOver,\n    propOnDragLeave = options.onDragLeave,\n    propOnDrop = options.onDrop;\n  var _a = __read(useState(false), 2),\n    isOver = _a[0],\n    setOver = _a[1];\n  var onDragOver = useCallback(function (event) {\n    propOnDragOver === null || propOnDragOver === void 0 ? void 0 : propOnDragOver(event);\n    event.preventDefault();\n    event.stopPropagation();\n    setOver(true);\n  }, [propOnDragOver]);\n  var onDragEnter = useCallback(function (event) {\n    propOnDragEnter === null || propOnDragEnter === void 0 ? void 0 : propOnDragEnter(event);\n    event.preventDefault();\n    event.stopPropagation();\n    setOver(true);\n  }, [propOnDragEnter]);\n  var onDrop = useCallback(function (event) {\n    propOnDrop === null || propOnDrop === void 0 ? void 0 : propOnDrop(event);\n    event.preventDefault();\n    event.stopPropagation();\n    setOver(false);\n  }, [propOnDrop]);\n  var onDragLeave = useCallback(function (event) {\n    propOnDragLeave === null || propOnDragLeave === void 0 ? void 0 : propOnDragLeave(event);\n    event.preventDefault();\n    event.stopPropagation();\n    if (!event.target || event.currentTarget === event.target || !event.currentTarget.contains(event.target)) {\n      setOver(false);\n    }\n  }, [propOnDragLeave]);\n  return [isOver, {\n    onDragOver: onDragOver,\n    onDragEnter: onDragEnter,\n    onDrop: onDrop,\n    onDragLeave: onDragLeave\n  }];\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAoB7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAM,SAAUC,WAAW,CACzBC,OAA4B;EAG1B,IAAaC,eAAe,GAI1BD,OAAO,YAJmB;IAChBE,cAAc,GAGxBF,OAAO,WAHiB;IACbG,eAAe,GAE1BH,OAAO,YAFmB;IACpBI,UAAU,GAChBJ,OAAO,OADS;EAEd,gBAAoBF,QAAQ,CAAC,KAAK,CAAC;IAAlCO,MAAM;IAAEC,OAAO,QAAmB;EAEzC,IAAMC,UAAU,GAAGV,WAAW,CAC5B,UAACW,KAAmB;IAClBN,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGM,KAAK,CAAC;IACvBA,KAAK,CAACC,cAAc,EAAE;IACtBD,KAAK,CAACE,eAAe,EAAE;IACvBJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EACD,CAACJ,cAAc,CAAC,CACjB;EACD,IAAMS,WAAW,GAAGd,WAAW,CAC7B,UAACW,KAAmB;IAClBP,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAGO,KAAK,CAAC;IACxBA,KAAK,CAACC,cAAc,EAAE;IACtBD,KAAK,CAACE,eAAe,EAAE;IACvBJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EACD,CAACL,eAAe,CAAC,CAClB;EACD,IAAMW,MAAM,GAAGf,WAAW,CACxB,UAACW,KAAmB;IAClBJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGI,KAAK,CAAC;IACnBA,KAAK,CAACC,cAAc,EAAE;IACtBD,KAAK,CAACE,eAAe,EAAE;IACvBJ,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC,EACD,CAACF,UAAU,CAAC,CACb;EACD,IAAMS,WAAW,GAAGhB,WAAW,CAC7B,UAACW,KAAmB;IAClBL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAGK,KAAK,CAAC;IACxBA,KAAK,CAACC,cAAc,EAAE;IACtBD,KAAK,CAACE,eAAe,EAAE;IAEvB,IACE,CAACF,KAAK,CAACM,MAAM,IACbN,KAAK,CAACO,aAAa,KAAKP,KAAK,CAACM,MAAM,IACpC,CAACN,KAAK,CAACO,aAAa,CAACC,QAAQ,CAACR,KAAK,CAACM,MAAqB,CAAC,EAC1D;MACAR,OAAO,CAAC,KAAK,CAAC;;EAElB,CAAC,EACD,CAACH,eAAe,CAAC,CAClB;EAED,OAAO,CACLE,MAAM,EACN;IACEE,UAAU;IACVI,WAAW;IACXC,MAAM;IACNC,WAAW;GACZ,CACF;AACH","names":["useCallback","useState","useDropzone","options","propOnDragEnter","propOnDragOver","propOnDragLeave","propOnDrop","isOver","setOver","onDragOver","event","preventDefault","stopPropagation","onDragEnter","onDrop","onDragLeave","target","currentTarget","contains"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/useDropzone.ts"],"sourcesContent":["import type { DragEvent, HTMLAttributes } from \"react\";\nimport { useCallback, useState } from \"react\";\n\n/**\n * @remarks \\@since 2.9.0\n * @deprecated \\@since 5.1.3 Use `DropzoneHandlers` instead.\n */\nexport type DropzoneHanders<E extends HTMLElement> = DropzoneHandlers<E>;\n\n/** @remarks \\@since 5.1.3 */\nexport type DropzoneHandlers<E extends HTMLElement> = Pick<\n  HTMLAttributes<E>,\n  \"onDragEnter\" | \"onDragOver\" | \"onDrop\" | \"onDragLeave\"\n>;\n\n/** @remarks \\@since 2.9.0 */\nexport type DropzoneHookReturnValue<E extends HTMLElement> = [\n  boolean,\n  DropzoneHandlers<E>\n];\n\n/**\n * This hook can be used to implement simple drag-and-drop behavior for file\n * uploads or special styles while dragging an element over a part of a page.\n *\n * @example\n * Simple File\n * ```ts\n * const style: CSSProperties = {\n *   border: '1px solid blue',\n * };\n *\n * function Example(): ReactElement {\n *   const { onDrop } = useFileUpload()\n *   const [isOver, handlers] = useDropzone({\n *     onDrop: (event) => {\n *       // normally use the `onDrop` behavior from `useFileUpload` to upload\n *       // files:\n *       // onDrop(event);\n *     }\n *   });\n *\n *   return (\n *     <div {...handlers} style={isOver ? style : {}}>\n *       Drag and drop some files!\n *       {isOver && <UploadSVGIcon />}\n *     </div>\n *   );\n * }\n * ```\n *\n * @see {@link useFileUpload} for a more complex example\n * @param options - The {@link DropzoneHandlers} that can be merged with the\n * default functionality.\n * @returns the {@link DropzoneHookReturnValue}\n * @remarks \\@since 2.9.0\n */\nexport function useDropzone<E extends HTMLElement>(\n  options: DropzoneHandlers<E>\n): DropzoneHookReturnValue<E> {\n  const {\n    onDragEnter: propOnDragEnter,\n    onDragOver: propOnDragOver,\n    onDragLeave: propOnDragLeave,\n    onDrop: propOnDrop,\n  } = options;\n  const [isOver, setOver] = useState(false);\n\n  const onDragOver = useCallback(\n    (event: DragEvent<E>) => {\n      propOnDragOver?.(event);\n      event.preventDefault();\n      event.stopPropagation();\n      setOver(true);\n    },\n    [propOnDragOver]\n  );\n  const onDragEnter = useCallback(\n    (event: DragEvent<E>) => {\n      propOnDragEnter?.(event);\n      event.preventDefault();\n      event.stopPropagation();\n      setOver(true);\n    },\n    [propOnDragEnter]\n  );\n  const onDrop = useCallback(\n    (event: DragEvent<E>) => {\n      propOnDrop?.(event);\n      event.preventDefault();\n      event.stopPropagation();\n      setOver(false);\n    },\n    [propOnDrop]\n  );\n  const onDragLeave = useCallback(\n    (event: DragEvent<E>) => {\n      propOnDragLeave?.(event);\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (\n        !event.target ||\n        event.currentTarget === event.target ||\n        !event.currentTarget.contains(event.target as HTMLElement)\n      ) {\n        setOver(false);\n      }\n    },\n    [propOnDragLeave]\n  );\n\n  return [\n    isOver,\n    {\n      onDragOver,\n      onDragEnter,\n      onDrop,\n      onDragLeave,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}