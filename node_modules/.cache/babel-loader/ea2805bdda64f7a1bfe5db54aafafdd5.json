{"ast":null,"code":"/**\n * The currently supported keyboard movement key combinations that increment or\n * decrement within a list. This was extracted from the w3.org website about\n * wia-aria best practices.\n *\n * @see https://www.w3.org/TR/wai-aria-practices/\n */\nexport var IncrementMovementKey;\n(function (IncrementMovementKey) {\n  IncrementMovementKey[\"ArrowUp\"] = \"ArrowUp\";\n  IncrementMovementKey[\"ArrowDown\"] = \"ArrowDown\";\n  IncrementMovementKey[\"ArrowLeft\"] = \"ArrowLeft\";\n  IncrementMovementKey[\"ArrowRight\"] = \"ArrowRight\";\n  IncrementMovementKey[\"PageDown\"] = \"PageDown\";\n  IncrementMovementKey[\"PageUp\"] = \"PageUp\";\n  IncrementMovementKey[\"ShiftArrowUp\"] = \"Shift+ArrowUp\";\n  IncrementMovementKey[\"ShiftArrowDown\"] = \"Shift+ArrowDown\";\n  IncrementMovementKey[\"ShiftArrowLeft\"] = \"Shift+ArrowLeft\";\n  IncrementMovementKey[\"ShiftArrowRight\"] = \"Shift+ArrowRight\";\n  IncrementMovementKey[\"AltArrowDown\"] = \"Alt+ArrowDown\";\n  IncrementMovementKey[\"AltArrowUp\"] = \"Alt+ArrowUp\";\n  IncrementMovementKey[\"AltArrowLeft\"] = \"Alt+ArrowLeft\";\n  IncrementMovementKey[\"AltArrowRight\"] = \"Alt+ArrowRight\";\n  IncrementMovementKey[\"AltPageDown\"] = \"Alt+PageDown\";\n  IncrementMovementKey[\"AltPageUp\"] = \"Alt+PageUp\";\n  IncrementMovementKey[\"ControlArrowDown\"] = \"Control+ArrowDown\";\n  IncrementMovementKey[\"ControlArrowUp\"] = \"Control+ArrowUp\";\n})(IncrementMovementKey || (IncrementMovementKey = {}));\n/**\n * The currently supported keyboard movement key combinations that jump to the\n * start or end of a list.  This was extracted from the w3.org website about\n * wai-aria best practices.\n *\n * @see https://www.w3.org/TR/wai-aria-practices/\n */\nexport var JumpMovementKey;\n(function (JumpMovementKey) {\n  JumpMovementKey[\"Home\"] = \"Home\";\n  JumpMovementKey[\"End\"] = \"End\";\n  JumpMovementKey[\"AltHome\"] = \"Alt+Home\";\n  JumpMovementKey[\"AltEnd\"] = \"Alt+End\";\n  JumpMovementKey[\"ControlHome\"] = \"Control+Home\";\n  JumpMovementKey[\"ControlEnd\"] = \"Control+End\";\n  JumpMovementKey[\"ControlShiftHome\"] = \"Control+Shift+Home\";\n  JumpMovementKey[\"ControlShiftEnd\"] = \"Control+Shift+End\";\n})(JumpMovementKey || (JumpMovementKey = {}));","map":{"version":3,"mappings":"AAkBA;;;;;;;AAOA,WAAYA,oBAmBX;AAnBD,WAAYA,oBAAoB;EAC9BA,2CAAmB;EACnBA,+CAAuB;EACvBA,+CAAuB;EACvBA,iDAAyB;EACzBA,6CAAqB;EACrBA,yCAAiB;EACjBA,sDAA8B;EAC9BA,0DAAkC;EAClCA,0DAAkC;EAClCA,4DAAoC;EACpCA,sDAA8B;EAC9BA,kDAA0B;EAC1BA,sDAA8B;EAC9BA,wDAAgC;EAChCA,oDAA4B;EAC5BA,gDAAwB;EACxBA,8DAAsC;EACtCA,0DAAkC;AACpC,CAAC,EAnBWA,oBAAoB,KAApBA,oBAAoB;AAqBhC;;;;;;;AAOA,WAAYC,eASX;AATD,WAAYA,eAAe;EACzBA,gCAAa;EACbA,8BAAW;EACXA,uCAAoB;EACpBA,qCAAkB;EAClBA,+CAA4B;EAC5BA,6CAA0B;EAC1BA,0DAAuC;EACvCA,wDAAqC;AACvC,CAAC,EATWA,eAAe,KAAfA,eAAe","names":["IncrementMovementKey","JumpMovementKey"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/wia-aria/movement/types.ts"],"sourcesContent":["/**\n * The type of focus that should be triggered from a keypress.\n */\nexport type FocusType = \"increment\" | \"decrement\" | \"first\" | \"last\";\n\n/**\n * A key object that is used to determine what type of behavior to do from a\n * keyboard event.\n */\nexport interface KeyConfig {\n  key: string;\n  type: FocusType;\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n}\n\n/**\n * The currently supported keyboard movement key combinations that increment or\n * decrement within a list. This was extracted from the w3.org website about\n * wia-aria best practices.\n *\n * @see https://www.w3.org/TR/wai-aria-practices/\n */\nexport enum IncrementMovementKey {\n  ArrowUp = \"ArrowUp\",\n  ArrowDown = \"ArrowDown\",\n  ArrowLeft = \"ArrowLeft\",\n  ArrowRight = \"ArrowRight\",\n  PageDown = \"PageDown\",\n  PageUp = \"PageUp\",\n  ShiftArrowUp = \"Shift+ArrowUp\",\n  ShiftArrowDown = \"Shift+ArrowDown\",\n  ShiftArrowLeft = \"Shift+ArrowLeft\",\n  ShiftArrowRight = \"Shift+ArrowRight\",\n  AltArrowDown = \"Alt+ArrowDown\",\n  AltArrowUp = \"Alt+ArrowUp\",\n  AltArrowLeft = \"Alt+ArrowLeft\",\n  AltArrowRight = \"Alt+ArrowRight\",\n  AltPageDown = \"Alt+PageDown\",\n  AltPageUp = \"Alt+PageUp\",\n  ControlArrowDown = \"Control+ArrowDown\",\n  ControlArrowUp = \"Control+ArrowUp\",\n}\n\n/**\n * The currently supported keyboard movement key combinations that jump to the\n * start or end of a list.  This was extracted from the w3.org website about\n * wai-aria best practices.\n *\n * @see https://www.w3.org/TR/wai-aria-practices/\n */\nexport enum JumpMovementKey {\n  Home = \"Home\",\n  End = \"End\",\n  AltHome = \"Alt+Home\",\n  AltEnd = \"Alt+End\",\n  ControlHome = \"Control+Home\",\n  ControlEnd = \"Control+End\",\n  ControlShiftHome = \"Control+Shift+Home\",\n  ControlShiftEnd = \"Control+Shift+End\",\n}\n\nexport type MovementKey = IncrementMovementKey | JumpMovementKey;\n\nexport interface MovementConfig {\n  /**\n   * Boolean if the keyboard movement should be able to loop around once it has\n   * reached the start or end of all the items.\n   */\n  loopable?: boolean;\n\n  /**\n   * Boolean if the movement should also include printable characters search\n   * movement.\n   */\n  searchable?: boolean;\n\n  /**\n   * The keys that can trigger a move to the next item. If the `loopable` config\n   * is enabled, this will loop to the first item if the last item is currently\n   * \"focused\".\n   */\n  incrementKeys: readonly IncrementMovementKey[];\n\n  /**\n   * The keys that can trigger a move to the previous item. If the `loopable`\n   * config is enabled, this will loop to the last item if the first item is\n   * currently \"focused\".\n   */\n  decrementKeys: readonly IncrementMovementKey[];\n\n  /**\n   * The keys that can trigger a move to the first item.\n   */\n  jumpToFirstKeys: readonly JumpMovementKey[];\n\n  /**\n   * The keys that can trigger a move to the last item.\n   */\n  jumpToLastKeys: readonly JumpMovementKey[];\n}\n"]},"metadata":{},"sourceType":"module"}