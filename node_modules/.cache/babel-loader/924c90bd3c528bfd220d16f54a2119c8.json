{"ast":null,"code":"/**\n * This is a simple util that'll generate a css `transform-origin` string so\n * that the fixed element can animate from the correct point based on the\n * provided anchor.\n *\n * @param anchor - The anchor that should be used to create the transform origin\n * for.\n * @returns the transform origin string\n * @internal\n */\nexport function getTransformOrigin(anchor) {\n  var x = \"0\";\n  switch (anchor.x) {\n    case \"right\":\n    case \"inner-left\":\n      x = \"0\";\n      break;\n    case \"center\":\n      x = \"50%\";\n      break;\n    case \"left\":\n    case \"inner-right\":\n      x = \"100%\";\n      break;\n    default:\n      x = \"0\";\n  }\n  var y = \"0\";\n  switch (anchor.y) {\n    case \"above\":\n    case \"bottom\":\n      y = \"100%\";\n      break;\n    case \"center\":\n      y = \"50%\";\n      break;\n    case \"below\":\n    case \"top\":\n      y = \"0\";\n      break;\n    default:\n      y = \"0\";\n  }\n  return \"\".concat(x, \" \").concat(y);\n}","map":{"version":3,"mappings":"AAEA;;;;;;;;;;AAUA,OAAM,SAAUA,kBAAkB,CAACC,MAAsB;EACvD,IAAIC,CAAC,GAAG,GAAG;EACX,QAAQD,MAAM,CAACC,CAAC;IACd,KAAK,OAAO;IACZ,KAAK,YAAY;MACfA,CAAC,GAAG,GAAG;MACP;IACF,KAAK,QAAQ;MACXA,CAAC,GAAG,KAAK;MACT;IACF,KAAK,MAAM;IACX,KAAK,aAAa;MAChBA,CAAC,GAAG,MAAM;MACV;IACF;MACEA,CAAC,GAAG,GAAG;EAAC;EAGZ,IAAIC,CAAC,GAAG,GAAG;EACX,QAAQF,MAAM,CAACE,CAAC;IACd,KAAK,OAAO;IACZ,KAAK,QAAQ;MACXA,CAAC,GAAG,MAAM;MACV;IACF,KAAK,QAAQ;MACXA,CAAC,GAAG,KAAK;MACT;IACF,KAAK,OAAO;IACZ,KAAK,KAAK;MACRA,CAAC,GAAG,GAAG;MACP;IACF;MACEA,CAAC,GAAG,GAAG;EAAC;EAGZ,OAAO,UAAGD,CAAC,cAAIC,CAAC,CAAE;AACpB","names":["getTransformOrigin","anchor","x","y"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/positioning/getTransformOrigin.ts"],"sourcesContent":["import type { PositionAnchor } from \"./types\";\n\n/**\n * This is a simple util that'll generate a css `transform-origin` string so\n * that the fixed element can animate from the correct point based on the\n * provided anchor.\n *\n * @param anchor - The anchor that should be used to create the transform origin\n * for.\n * @returns the transform origin string\n * @internal\n */\nexport function getTransformOrigin(anchor: PositionAnchor): string {\n  let x = \"0\";\n  switch (anchor.x) {\n    case \"right\":\n    case \"inner-left\":\n      x = \"0\";\n      break;\n    case \"center\":\n      x = \"50%\";\n      break;\n    case \"left\":\n    case \"inner-right\":\n      x = \"100%\";\n      break;\n    default:\n      x = \"0\";\n  }\n\n  let y = \"0\";\n  switch (anchor.y) {\n    case \"above\":\n    case \"bottom\":\n      y = \"100%\";\n      break;\n    case \"center\":\n      y = \"50%\";\n      break;\n    case \"below\":\n    case \"top\":\n      y = \"0\";\n      break;\n    default:\n      y = \"0\";\n  }\n\n  return `${x} ${y}`;\n}\n"]},"metadata":{},"sourceType":"module"}