{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-snackbar\");\nexport var Snackbar = forwardRef(function Snackbar(_a, ref) {\n  var _b;\n  var className = _a.className,\n    children = _a.children,\n    _c = _a.portal,\n    portal = _c === void 0 ? false : _c,\n    portalInto = _a.portalInto,\n    portalIntoId = _a.portalIntoId,\n    _d = _a.position,\n    position = _d === void 0 ? \"bottom\" : _d,\n    props = __rest(_a, [\"className\", \"children\", \"portal\", \"portalInto\", \"portalIntoId\", \"position\"]);\n  return _jsx(ConditionalPortal, __assign({\n    portal: portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, {\n    children: _jsx(\"div\", __assign({}, props, {\n      role: \"status\",\n      ref: ref,\n      className: cn(block((_b = {}, _b[position] = true, _b)), className)\n    }, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAE3B,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,GAAG,QAAQ,iBAAiB;AAmBrC,IAAMC,KAAK,GAAGD,GAAG,CAAC,cAAc,CAAC;AAEjC,OAAO,IAAME,QAAQ,GAAGL,UAAU,CAChC,SAASK,QAAQ,CACfC,EAQC,EACDC,GAAG;;EARD,aAAS;IACTC,QAAQ;IACRC,cAAc;IAAdC,MAAM,mBAAG,KAAK;IACdC,UAAU;IACVC,YAAY;IACZC,gBAAmB;IAAnBC,QAAQ,mBAAG,QAAQ;IAChBC,KAAK,cAPV,6EAQC,CADS;EAIV,OACEC,KAACd,iBAAiB;IAChBQ,MAAM,EAAEA,MAAM;IACdC,UAAU,EAAEA,UAAU;IACtBC,YAAY,EAAEA;EAAY;IAAAJ,UAE1BQ,yBACMD,KAAK;MACTE,IAAI,EAAC,QAAQ;MACbV,GAAG,EAAEA,GAAG;MACRW,SAAS,EAAEjB,EAAE,CAACG,KAAK,WAAGe,GAACL,QAAQ,IAAG,IAAI,MAAG,EAAEI,SAAS;IAAC;MAAAV,UAEpDA;IAAQ;EACL,GACY;AAExB,CAAC,CACF","names":["forwardRef","cn","ConditionalPortal","bem","block","Snackbar","_a","ref","children","_c","portal","portalInto","portalIntoId","_d","position","props","_jsx","role","className","_b"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/alert/src/Snackbar.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { RenderConditionalPortalProps } from \"@react-md/portal\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { bem } from \"@react-md/utils\";\n\nexport type SnackbarPosition = \"bottom\" | \"top\";\n\nexport interface SnackbarProps\n  extends HTMLAttributes<HTMLDivElement>,\n    RenderConditionalPortalProps {\n  /**\n   * The id for the snackbar element. This is required for a11y.\n   */\n  id: string;\n\n  /**\n   * The position for the snackbar to be fixed within the viewport or a\n   * container element.\n   */\n  position?: SnackbarPosition;\n}\n\nconst block = bem(\"rmd-snackbar\");\n\nexport const Snackbar = forwardRef<HTMLDivElement, SnackbarProps>(\n  function Snackbar(\n    {\n      className,\n      children,\n      portal = false,\n      portalInto,\n      portalIntoId,\n      position = \"bottom\",\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <ConditionalPortal\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n      >\n        <div\n          {...props}\n          role=\"status\"\n          ref={ref}\n          className={cn(block({ [position]: true }), className)}\n        >\n          {children}\n        </div>\n      </ConditionalPortal>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}