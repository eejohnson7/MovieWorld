{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem, getPercentage } from \"@react-md/utils\";\nvar block = bem(\"rmd-linear-progress\");\nexport var LinearProgress = forwardRef(function LinearProgress(_a, ref) {\n  var propStyle = _a.style,\n    className = _a.className,\n    propBarStyle = _a.barStyle,\n    barClassName = _a.barClassName,\n    _b = _a.min,\n    min = _b === void 0 ? 0 : _b,\n    _c = _a.max,\n    max = _c === void 0 ? 100 : _c,\n    value = _a.value,\n    _d = _a.reverse,\n    reverse = _d === void 0 ? false : _d,\n    _e = _a.animate,\n    animate = _e === void 0 ? true : _e,\n    _f = _a.vertical,\n    vertical = _f === void 0 ? false : _f,\n    _g = _a.verticalHeight,\n    verticalHeight = _g === void 0 ? 240 : _g,\n    props = __rest(_a, [\"style\", \"className\", \"barStyle\", \"barClassName\", \"min\", \"max\", \"value\", \"reverse\", \"animate\", \"vertical\", \"verticalHeight\"]);\n  var style = useMemo(function () {\n    if (!vertical || verticalHeight === null) {\n      return propStyle;\n    }\n    return __assign(__assign({}, propStyle), {\n      height: verticalHeight\n    });\n  }, [propStyle, vertical, verticalHeight]);\n  var progress;\n  if (typeof value === \"number\") {\n    progress = getPercentage({\n      min: min,\n      max: max,\n      value: value\n    });\n  }\n  var barStyle = useMemo(function () {\n    var _a;\n    if (typeof progress !== \"number\") {\n      return propBarStyle;\n    }\n    var key = vertical ? \"height\" : \"width\";\n    return __assign(__assign({}, propBarStyle), (_a = {}, _a[key] = \"\".concat(progress * 100, \"%\"), _a));\n  }, [progress, propBarStyle, vertical]);\n  var determinate = typeof progress === \"number\";\n  var indeterminate = !determinate;\n  return _jsx(\"span\", __assign({}, props, {\n    ref: ref,\n    style: style,\n    role: \"progressbar\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    className: cn(block({\n      vertical: vertical,\n      determinate: determinate,\n      indeterminate: indeterminate\n    }), className)\n  }, {\n    children: _jsx(\"span\", {\n      style: barStyle,\n      className: cn(block(\"bar\", {\n        vertical: vertical,\n        \"vertical-reverse\": vertical && reverse,\n        horizontal: !vertical,\n        \"horizontal-reverse\": !vertical && reverse,\n        animate: animate && determinate,\n        determinate: determinate,\n        indeterminate: indeterminate,\n        \"determinate-reverse\": determinate && reverse && !vertical,\n        \"determinate-vertical-reverse\": determinate && reverse && vertical,\n        \"indeterminate-reverse\": indeterminate && reverse && !vertical,\n        \"indeterminate-vertical\": indeterminate && vertical,\n        \"indeterminate-vertical-reverse\": indeterminate && reverse && vertical\n      }), barClassName)\n    })\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,EAAEC,aAAa,QAAQ,iBAAiB;AA2CpD,IAAMC,KAAK,GAAGF,GAAG,CAAC,qBAAqB,CAAC;AAExC,OAAO,IAAMG,cAAc,GAAGN,UAAU,CACtC,SAASM,cAAc,CACrBC,EAaC,EACDC,GAAG;EAbD,IAAOC,SAAS;IAChBC,SAAS;IACCC,YAAY;IACtBC,YAAY;IACZC,WAAO;IAAPC,GAAG,mBAAG,CAAC;IACPC,WAAS;IAATC,GAAG,mBAAG,GAAG;IACTC,KAAK;IACLC,eAAe;IAAfC,OAAO,mBAAG,KAAK;IACfC,eAAc;IAAdC,OAAO,mBAAG,IAAI;IACdC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;IAChBC,sBAAoB;IAApBC,cAAc,mBAAG,GAAG;IACjBC,KAAK,cAZV,6HAaC,CADS;EAIV,IAAMC,KAAK,GAAG1B,OAAO,CAAC;IACpB,IAAI,CAACsB,QAAQ,IAAIE,cAAc,KAAK,IAAI,EAAE;MACxC,OAAOhB,SAAS;;IAGlB,6BACKA,SAAS;MACZmB,MAAM,EAAEH;IAAc;EAE1B,CAAC,EAAE,CAAChB,SAAS,EAAEc,QAAQ,EAAEE,cAAc,CAAC,CAAC;EAEzC,IAAII,QAA4B;EAChC,IAAI,OAAOZ,KAAK,KAAK,QAAQ,EAAE;IAC7BY,QAAQ,GAAGzB,aAAa,CAAC;MAAEU,GAAG;MAAEE,GAAG;MAAEC,KAAK;IAAA,CAAE,CAAC;;EAE/C,IAAMa,QAAQ,GAAG7B,OAAO,CAAC;;IACvB,IAAI,OAAO4B,QAAQ,KAAK,QAAQ,EAAE;MAChC,OAAOlB,YAAY;;IAGrB,IAAMoB,GAAG,GAAGR,QAAQ,GAAG,QAAQ,GAAG,OAAO;IACzC,6BACKZ,YAAY,gBACdoB,GAAG,IAAG,UAAGF,QAAQ,GAAG,GAAG,MAAG;EAE/B,CAAC,EAAE,CAACA,QAAQ,EAAElB,YAAY,EAAEY,QAAQ,CAAC,CAAC;EAEtC,IAAMS,WAAW,GAAG,OAAOH,QAAQ,KAAK,QAAQ;EAChD,IAAMI,aAAa,GAAG,CAACD,WAAW;EAClC,OACEE,0BACMR,KAAK;IACTlB,GAAG,EAAEA,GAAG;IACRmB,KAAK,EAAEA,KAAK;IACZQ,IAAI,EAAC,aAAa;IAAA,iBACHrB,GAAG;IAAA,iBACHE,GAAG;IAAA,iBACHC,KAAK;IACpBP,SAAS,EAAER,EAAE,CACXG,KAAK,CAAC;MACJkB,QAAQ;MACRS,WAAW;MACXC,aAAa;KACd,CAAC,EACFvB,SAAS;EACV;IAAA0B,UAEDF;MACEP,KAAK,EAAEG,QAAQ;MACfpB,SAAS,EAAER,EAAE,CACXG,KAAK,CAAC,KAAK,EAAE;QACXkB,QAAQ;QACR,kBAAkB,EAAEA,QAAQ,IAAIJ,OAAO;QACvCkB,UAAU,EAAE,CAACd,QAAQ;QACrB,oBAAoB,EAAE,CAACA,QAAQ,IAAIJ,OAAO;QAC1CE,OAAO,EAAEA,OAAO,IAAIW,WAAW;QAC/BA,WAAW;QACXC,aAAa;QACb,qBAAqB,EAAED,WAAW,IAAIb,OAAO,IAAI,CAACI,QAAQ;QAC1D,8BAA8B,EAC5BS,WAAW,IAAIb,OAAO,IAAII,QAAQ;QACpC,uBAAuB,EAAEU,aAAa,IAAId,OAAO,IAAI,CAACI,QAAQ;QAC9D,wBAAwB,EAAEU,aAAa,IAAIV,QAAQ;QACnD,gCAAgC,EAC9BU,aAAa,IAAId,OAAO,IAAII;OAC/B,CAAC,EACFX,YAAY;IACb;EACD,GACG;AAEX,CAAC,CACF","names":["forwardRef","useMemo","cn","bem","getPercentage","block","LinearProgress","_a","ref","propStyle","className","propBarStyle","barClassName","_b","min","_c","max","value","_d","reverse","_e","animate","_f","vertical","_g","verticalHeight","props","style","height","progress","barStyle","key","determinate","indeterminate","_jsx","role","children","horizontal"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/progress/src/LinearProgress.tsx"],"sourcesContent":["import type { CSSProperties, HTMLAttributes } from \"react\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem, getPercentage } from \"@react-md/utils\";\n\nimport type { ProgressProps } from \"./types\";\n\nexport interface LinearProgressProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, \"id\">,\n    ProgressProps {\n  /**\n   * An optional style to apply to the progress bar. This will be merged with\n   * the current width or height tracking the progress when a `value` is also\n   * provided.\n   */\n  barStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the progress bar.\n   */\n  barClassName?: string;\n\n  /**\n   * Boolean if the progress should be reversed. This will change the progress\n   * direction from `left-to-right` to be `right-to-left`. If the current\n   * language is a rtl language and this prop is enabled, the direction will\n   * still be `left-to-right`.\n   */\n  reverse?: boolean;\n\n  /**\n   * Boolean if the progress should be vertical instead of horizontal.  When\n   * this prop is set, you should also set the `verticalHeight` prop to a height\n   * value you want for your progress bar.\n   */\n  vertical?: boolean;\n\n  /**\n   * Since there isn't really a good way to have \"auto height\", you'll need to\n   * manually set the progress bar's height with this prop to some pixel value.\n   * If you'd prefer to set the height in Sass/css, set this value to `null`\n   * instead since this value would be passed down as a `height` inline style.\n   */\n  verticalHeight?: number | null;\n}\n\nconst block = bem(\"rmd-linear-progress\");\n\nexport const LinearProgress = forwardRef<HTMLSpanElement, LinearProgressProps>(\n  function LinearProgress(\n    {\n      style: propStyle,\n      className,\n      barStyle: propBarStyle,\n      barClassName,\n      min = 0,\n      max = 100,\n      value,\n      reverse = false,\n      animate = true,\n      vertical = false,\n      verticalHeight = 240,\n      ...props\n    },\n    ref\n  ) {\n    const style = useMemo(() => {\n      if (!vertical || verticalHeight === null) {\n        return propStyle;\n      }\n\n      return {\n        ...propStyle,\n        height: verticalHeight,\n      };\n    }, [propStyle, vertical, verticalHeight]);\n\n    let progress: number | undefined;\n    if (typeof value === \"number\") {\n      progress = getPercentage({ min, max, value });\n    }\n    const barStyle = useMemo(() => {\n      if (typeof progress !== \"number\") {\n        return propBarStyle;\n      }\n\n      const key = vertical ? \"height\" : \"width\";\n      return {\n        ...propBarStyle,\n        [key]: `${progress * 100}%`,\n      };\n    }, [progress, propBarStyle, vertical]);\n\n    const determinate = typeof progress === \"number\";\n    const indeterminate = !determinate;\n    return (\n      <span\n        {...props}\n        ref={ref}\n        style={style}\n        role=\"progressbar\"\n        aria-valuemin={min}\n        aria-valuemax={max}\n        aria-valuenow={value}\n        className={cn(\n          block({\n            vertical,\n            determinate,\n            indeterminate,\n          }),\n          className\n        )}\n      >\n        <span\n          style={barStyle}\n          className={cn(\n            block(\"bar\", {\n              vertical,\n              \"vertical-reverse\": vertical && reverse,\n              horizontal: !vertical,\n              \"horizontal-reverse\": !vertical && reverse,\n              animate: animate && determinate,\n              determinate,\n              indeterminate,\n              \"determinate-reverse\": determinate && reverse && !vertical,\n              \"determinate-vertical-reverse\":\n                determinate && reverse && vertical,\n              \"indeterminate-reverse\": indeterminate && reverse && !vertical,\n              \"indeterminate-vertical\": indeterminate && vertical,\n              \"indeterminate-vertical-reverse\":\n                indeterminate && reverse && vertical,\n            }),\n            barClassName\n          )}\n        />\n      </span>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}