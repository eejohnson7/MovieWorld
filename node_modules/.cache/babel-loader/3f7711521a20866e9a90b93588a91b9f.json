{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useState } from \"react\";\nimport { useKeyboardFocus } from \"./useKeyboardFocus\";\n/**\n * @see {@link ActiveDescendantMovementProvider} for an example\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport function useActiveDescendantFocus(_a) {\n  if (_a === void 0) {\n    _a = {};\n  }\n  var _b = _a.defaultActiveId,\n    defaultActiveId = _b === void 0 ? \"\" : _b,\n    options = __rest(_a, [\"defaultActiveId\"]);\n  var _c = __read(useState(defaultActiveId), 2),\n    activeId = _c[0],\n    setActiveId = _c[1];\n  return __assign(__assign({}, useKeyboardFocus(__assign(__assign({}, options), {\n    onFocusChange: function (element) {\n      setActiveId(element.id);\n    },\n    getDefaultFocusIndex: function (elements) {\n      if (!activeId) {\n        return -1;\n      }\n      return elements.findIndex(function (_a) {\n        var id = _a.id;\n        return id === activeId;\n      });\n    }\n  }))), {\n    \"aria-activedescendant\": activeId,\n    providerProps: {\n      activeId: activeId,\n      setActiveId: setActiveId\n    }\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAOhC,SAASC,gBAAgB,QAAQ,oBAAoB;AAiCrD;;;;;AAKA,OAAM,SAAUC,wBAAwB,CAAwBC,EAGrB;EAHqB;IAAAA,OAGrB;EAAA;EAFzC,2BAAoB;IAApBC,eAAe,mBAAG,EAAE;IACjBC,OAAO,cAFoD,mBAG/D,CADW;EAEJ,gBAA0BL,QAAQ,CAACI,eAAe,CAAC;IAAlDE,QAAQ;IAAEC,WAAW,QAA6B;EACzD,6BACKN,gBAAgB,uBACdI,OAAO;IACVG,aAAa,YAACC,OAAO;MACnBF,WAAW,CAACE,OAAO,CAACC,EAAE,CAAC;IACzB,CAAC;IACDC,oBAAoB,YAACC,QAAQ;MAC3B,IAAI,CAACN,QAAQ,EAAE;QACb,OAAO,CAAC,CAAC;;MAGX,OAAOM,QAAQ,CAACC,SAAS,CAAC,UAACV,EAAM;YAAJO,EAAE;QAAO,SAAE,KAAKJ,QAAQ;MAAf,CAAe,CAAC;IACxD;EAAC,GACD;IACF,uBAAuB,EAAEA,QAAQ;IACjCQ,aAAa,EAAE;MACbR,QAAQ;MACRC,WAAW;;EACZ;AAEL","names":["useState","useKeyboardFocus","useActiveDescendantFocus","_a","defaultActiveId","options","activeId","setActiveId","onFocusChange","element","id","getDefaultFocusIndex","elements","findIndex","providerProps"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/keyboardMovement/useActiveDescendantFocus.ts"],"sourcesContent":["import { useState } from \"react\";\n\nimport type { ActiveDescendantContext } from \"./activeDescendantContext\";\nimport type {\n  KeyboardFocusCallbacks,\n  KeyboardFocusHookReturnValue,\n} from \"./useKeyboardFocus\";\nimport { useKeyboardFocus } from \"./useKeyboardFocus\";\n\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport interface ActiveDescendantFocusHookOptions<E extends HTMLElement>\n  extends KeyboardFocusCallbacks<E> {\n  /**\n   * An optional DOM id for one of the children that should be focused by\n   * default.\n   */\n  defaultActiveId?: string;\n}\n\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport interface ActiveDescendantFocusHookReturnValue<E extends HTMLElement>\n  extends KeyboardFocusHookReturnValue<E> {\n  /**\n   * The current DOM id of a child that has keyboard focus.\n   */\n  \"aria-activedescendant\": string;\n\n  /**\n   * An object of props that should be passed to the\n   * {@link ActiveDescendantMovementProvider}.\n   */\n  providerProps: Readonly<ActiveDescendantContext>;\n}\n\n/**\n * @see {@link ActiveDescendantMovementProvider} for an example\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport function useActiveDescendantFocus<E extends HTMLElement>({\n  defaultActiveId = \"\",\n  ...options\n}: ActiveDescendantFocusHookOptions<E> = {}): ActiveDescendantFocusHookReturnValue<E> {\n  const [activeId, setActiveId] = useState(defaultActiveId);\n  return {\n    ...useKeyboardFocus({\n      ...options,\n      onFocusChange(element) {\n        setActiveId(element.id);\n      },\n      getDefaultFocusIndex(elements) {\n        if (!activeId) {\n          return -1;\n        }\n\n        return elements.findIndex(({ id }) => id === activeId);\n      },\n    }),\n    \"aria-activedescendant\": activeId,\n    providerProps: {\n      activeId,\n      setActiveId,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}