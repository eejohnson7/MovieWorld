{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { List } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\nimport { defaultGetItemLabel } from \"./defaultGetItemLabel\";\nimport { defaultGetItemValue } from \"./defaultGetItemValue\";\nimport { defaultTreeItemRenderer } from \"./defaultTreeItemRenderer\";\nimport { useTreeMovement } from \"./useTreeMovement\";\nvar block = bem(\"rmd-tree\");\nvar defaultGetItemProps = function () {\n  return undefined;\n};\n/**\n * Creates an accessible tree widget that allows you to show hierarchical data\n * in a list presentation view. This component requires the selection and\n * expansion state to be provided/controlled but you can use the\n * `useTreeItemSelection` and `useTreeItemExpansion` hooks for a great starting\n * point for this functionality.\n */\nexport var Tree = forwardRef(function Tree(\n// eslint-disable-line @typescript-eslint/no-explicit-any\n_a, ref) {\n  var id = _a.id,\n    className = _a.className,\n    _b = _a.itemRenderer,\n    itemRenderer = _b === void 0 ? defaultTreeItemRenderer : _b,\n    data = _a.data,\n    _c = _a.multiSelect,\n    multiSelect = _c === void 0 ? false : _c,\n    selectedIds = _a.selectedIds,\n    onItemSelect = _a.onItemSelect,\n    onMultiItemSelect = _a.onMultiItemSelect,\n    expandedIds = _a.expandedIds,\n    onItemExpansion = _a.onItemExpansion,\n    onMultiItemExpansion = _a.onMultiItemExpansion,\n    _d = _a.expanderLeft,\n    expanderLeft = _d === void 0 ? false : _d,\n    propExpanderIcon = _a.expanderIcon,\n    _e = _a.labelKey,\n    labelKey = _e === void 0 ? \"name\" : _e,\n    _f = _a.valueKey,\n    valueKey = _f === void 0 ? \"name\" : _f,\n    _g = _a.getItemLabel,\n    getItemLabel = _g === void 0 ? defaultGetItemLabel : _g,\n    _h = _a.getItemValue,\n    getItemValue = _h === void 0 ? defaultGetItemValue : _h,\n    _j = _a.getItemProps,\n    getItemProps = _j === void 0 ? defaultGetItemProps : _j,\n    linkComponent = _a.linkComponent,\n    sort = _a.sort,\n    _k = _a.rootId,\n    rootId = _k === void 0 ? null : _k,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    onKeyDown = _a.onKeyDown,\n    props = __rest(_a,\n    // eslint-disable-line @typescript-eslint/no-explicit-any\n    [\"id\", \"className\", \"itemRenderer\", \"data\", \"multiSelect\", \"selectedIds\", \"onItemSelect\", \"onMultiItemSelect\", \"expandedIds\", \"onItemExpansion\", \"onMultiItemExpansion\", \"expanderLeft\", \"expanderIcon\", \"labelKey\", \"valueKey\", \"getItemLabel\", \"getItemValue\", \"getItemProps\", \"linkComponent\", \"sort\", \"rootId\", \"onBlur\", \"onFocus\", \"onKeyDown\"]);\n  var expanderIcon = useIcon(\"dropdown\", propExpanderIcon);\n  var _l = useTreeMovement({\n      id: id,\n      data: data,\n      sort: sort,\n      rootId: rootId,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onKeyDown: onKeyDown,\n      multiSelect: multiSelect,\n      selectedIds: selectedIds,\n      onItemSelect: onItemSelect,\n      onMultiItemSelect: onMultiItemSelect,\n      expandedIds: expandedIds,\n      onItemExpansion: onItemExpansion,\n      onMultiItemExpansion: onMultiItemExpansion,\n      valueKey: valueKey,\n      getItemValue: getItemValue\n    }),\n    items = _l.items,\n    activeId = _l.activeId,\n    setActiveId = _l.setActiveId,\n    itemIdRefs = _l.itemIdRefs,\n    handleBlur = _l.handleBlur,\n    handleFocus = _l.handleFocus,\n    handleKeyDown = _l.handleKeyDown;\n  var renderChildItems = function (items, depth, parentIndexes) {\n    var listSize = items.length;\n    return items.map(function (item, index) {\n      var _a;\n      var itemId = item.itemId,\n        childItems = item.childItems,\n        isCustom = item.isCustom;\n      var selected = selectedIds.includes(itemId);\n      var expanded = expandedIds.includes(itemId);\n      var id = \"\";\n      var ref;\n      var visibleIndex = -1;\n      if (!isCustom) {\n        _a = itemIdRefs[itemId], id = _a.id, ref = _a.ref, visibleIndex = _a.visibleIndex;\n      }\n      var focused = id === activeId;\n      return itemRenderer({\n        key: itemId,\n        id: id,\n        liRef: ref,\n        depth: depth,\n        listSize: listSize,\n        itemIndex: index,\n        selected: selected,\n        expanded: expanded,\n        focused: focused,\n        onClick: function (event) {\n          event.stopPropagation();\n          setActiveId(itemId);\n          onItemSelect(itemId);\n          if (childItems) {\n            onItemExpansion(itemId, !expanded);\n          }\n        },\n        renderChildItems: childItems ? function () {\n          return renderChildItems(childItems, depth + 1, __spreadArray(__spreadArray([], __read(parentIndexes), false), [index + 1], false));\n        } : undefined\n      }, __assign(__assign({}, item), {\n        visibleIndex: visibleIndex\n      }), __assign({\n        id: id,\n        expanderLeft: expanderLeft,\n        expanderIcon: expanderIcon,\n        multiSelect: multiSelect,\n        labelKey: labelKey,\n        valueKey: valueKey,\n        getItemLabel: getItemLabel,\n        getItemValue: getItemValue,\n        getItemProps: getItemProps,\n        linkComponent: linkComponent,\n        rootId: rootId\n      }, props));\n    });\n  };\n  return _jsx(List, __assign({}, props, {\n    ref: ref,\n    id: id,\n    \"aria-activedescendant\": activeId,\n    \"aria-multiselectable\": multiSelect || undefined,\n    role: \"tree\",\n    tabIndex: 0,\n    className: cn(block(), className),\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown\n  }, {\n    children: renderChildItems(items, 0, [])\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","useIcon","List","bem","defaultGetItemLabel","defaultGetItemValue","defaultTreeItemRenderer","useTreeMovement","block","defaultGetItemProps","Tree","_a","ref","className","_b","itemRenderer","data","_c","multiSelect","selectedIds","onItemSelect","onMultiItemSelect","expandedIds","onItemExpansion","onMultiItemExpansion","_d","expanderLeft","propExpanderIcon","_e","labelKey","_f","valueKey","_g","getItemLabel","_h","getItemValue","_j","getItemProps","linkComponent","sort","_k","rootId","onBlur","onFocus","onKeyDown","props","expanderIcon","id","items","activeId","setActiveId","itemIdRefs","handleBlur","handleFocus","handleKeyDown","renderChildItems","depth","parentIndexes","listSize","length","map","item","index","childItems","isCustom","selected","includes","itemId","expanded","visibleIndex","focused","key","liRef","itemIndex","onClick","event","stopPropagation","undefined","_jsx","role","tabIndex","children"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/tree/src/Tree.tsx"],"sourcesContent":["import type { MutableRefObject, ReactElement, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { ListElement } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\n\nimport { defaultGetItemLabel } from \"./defaultGetItemLabel\";\nimport { defaultGetItemValue } from \"./defaultGetItemValue\";\nimport { defaultTreeItemRenderer } from \"./defaultTreeItemRenderer\";\nimport type { TreeProps, UnknownTreeItem } from \"./types\";\nimport type { NestedTreeItem } from \"./useNestedTreeList\";\nimport { useTreeMovement } from \"./useTreeMovement\";\n\nconst block = bem(\"rmd-tree\");\nconst defaultGetItemProps = (): undefined => undefined;\n\n/**\n * Creates an accessible tree widget that allows you to show hierarchical data\n * in a list presentation view. This component requires the selection and\n * expansion state to be provided/controlled but you can use the\n * `useTreeItemSelection` and `useTreeItemExpansion` hooks for a great starting\n * point for this functionality.\n */\nexport const Tree = forwardRef<ListElement, TreeProps<any>>(function Tree( // eslint-disable-line @typescript-eslint/no-explicit-any\n  {\n    id,\n    className,\n    itemRenderer = defaultTreeItemRenderer,\n    data,\n    multiSelect = false,\n    selectedIds,\n    onItemSelect,\n    onMultiItemSelect,\n    expandedIds,\n    onItemExpansion,\n    onMultiItemExpansion,\n    expanderLeft = false,\n    expanderIcon: propExpanderIcon,\n    labelKey = \"name\",\n    valueKey = \"name\",\n    getItemLabel = defaultGetItemLabel,\n    getItemValue = defaultGetItemValue,\n    getItemProps = defaultGetItemProps,\n    linkComponent,\n    sort,\n    rootId = null,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    ...props\n  },\n  ref\n) {\n  const expanderIcon = useIcon(\"dropdown\", propExpanderIcon);\n\n  const {\n    items,\n    activeId,\n    setActiveId,\n    itemIdRefs,\n    handleBlur,\n    handleFocus,\n    handleKeyDown,\n  } = useTreeMovement({\n    id,\n    data,\n    sort,\n    rootId,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    multiSelect,\n    selectedIds,\n    onItemSelect,\n    onMultiItemSelect,\n    expandedIds,\n    onItemExpansion,\n    onMultiItemExpansion,\n    valueKey,\n    getItemValue,\n  });\n\n  const renderChildItems = (\n    items: readonly NestedTreeItem<UnknownTreeItem>[],\n    depth: number,\n    parentIndexes: readonly number[]\n  ): ReactNode => {\n    const listSize = items.length;\n\n    return items.map((item, index) => {\n      const { itemId, childItems, isCustom } = item;\n      const selected = selectedIds.includes(itemId);\n      const expanded = expandedIds.includes(itemId);\n      let id = \"\";\n      let ref: MutableRefObject<HTMLLIElement | null> | undefined;\n      let visibleIndex = -1;\n      if (!isCustom) {\n        ({ id, ref, visibleIndex } = itemIdRefs[itemId]);\n      }\n\n      const focused = id === activeId;\n\n      return itemRenderer(\n        {\n          key: itemId,\n          id,\n          liRef: ref,\n          depth,\n          listSize,\n          itemIndex: index,\n          selected,\n          expanded,\n          focused,\n          onClick(event) {\n            event.stopPropagation();\n\n            setActiveId(itemId);\n            onItemSelect(itemId);\n            if (childItems) {\n              onItemExpansion(itemId, !expanded);\n            }\n          },\n          renderChildItems: childItems\n            ? () =>\n                renderChildItems(childItems, depth + 1, [\n                  ...parentIndexes,\n                  index + 1,\n                ])\n            : undefined,\n        },\n        { ...item, visibleIndex },\n        {\n          id,\n          expanderLeft,\n          expanderIcon: expanderIcon as ReactElement,\n          multiSelect,\n          labelKey,\n          valueKey,\n          getItemLabel,\n          getItemValue,\n          getItemProps,\n          linkComponent,\n          rootId,\n          ...props,\n        }\n      );\n    });\n  };\n\n  return (\n    <List\n      {...props}\n      ref={ref}\n      id={id}\n      aria-activedescendant={activeId}\n      aria-multiselectable={multiSelect || undefined}\n      role=\"tree\"\n      tabIndex={0}\n      className={cn(block(), className)}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyDown={handleKeyDown}\n    >\n      {renderChildItems(items, 0, [])}\n    </List>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}