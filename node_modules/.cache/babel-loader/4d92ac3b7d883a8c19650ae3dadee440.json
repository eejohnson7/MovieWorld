{"ast":null,"code":"import { BELOW_CENTER_ANCHOR, BELOW_INNER_LEFT_ANCHOR, BOTTOM_INNER_LEFT_ANCHOR, BOTTOM_INNER_RIGHT_ANCHOR, CENTER_RIGHT_ANCHOR, TOP_INNER_LEFT_ANCHOR, TOP_INNER_RIGHT_ANCHOR, TOP_RIGHT_ANCHOR } from \"@react-md/utils\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport var noop = function () {\n  // do nothing\n};\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport var getDefaultAnchor = function (_a) {\n  var menubar = _a.menubar,\n    menuitem = _a.menuitem,\n    floating = _a.floating,\n    horizontal = _a.horizontal;\n  switch (floating) {\n    case \"bottom-left\":\n      return BOTTOM_INNER_LEFT_ANCHOR;\n    case \"bottom-right\":\n      return BOTTOM_INNER_RIGHT_ANCHOR;\n    case \"top-left\":\n      return TOP_INNER_LEFT_ANCHOR;\n    case \"top-right\":\n      return TOP_INNER_RIGHT_ANCHOR;\n  }\n  if (menubar) {\n    return menuitem ? CENTER_RIGHT_ANCHOR : BELOW_INNER_LEFT_ANCHOR;\n  }\n  if (horizontal) {\n    return BELOW_CENTER_ANCHOR;\n  }\n  if (menuitem) {\n    return TOP_RIGHT_ANCHOR;\n  }\n  return TOP_INNER_RIGHT_ANCHOR;\n};","map":{"version":3,"mappings":"AAEA,SACEA,mBAAmB,EACnBC,uBAAuB,EACvBC,wBAAwB,EACxBC,yBAAyB,EACzBC,mBAAmB,EACnBC,qBAAqB,EACrBC,sBAAsB,EACtBC,gBAAgB,QACX,iBAAiB;AAExB;;;;AAIA,OAAO,IAAMC,IAAI,GAAG;EAClB;AACF,CAAC;AAaD;;;;AAIA,OAAO,IAAMC,gBAAgB,GAAG,UAACC,EAKV;MAJrBC,OAAO;IACPC,QAAQ;IACRC,QAAQ;IACRC,UAAU;EAEV,QAAQD,QAAQ;IACd,KAAK,aAAa;MAChB,OAAOX,wBAAwB;IACjC,KAAK,cAAc;MACjB,OAAOC,yBAAyB;IAClC,KAAK,UAAU;MACb,OAAOE,qBAAqB;IAC9B,KAAK,WAAW;MACd,OAAOC,sBAAsB;EAAC;EAGlC,IAAIK,OAAO,EAAE;IACX,OAAOC,QAAQ,GAAGR,mBAAmB,GAAGH,uBAAuB;;EAGjE,IAAIa,UAAU,EAAE;IACd,OAAOd,mBAAmB;;EAG5B,IAAIY,QAAQ,EAAE;IACZ,OAAOL,gBAAgB;;EAGzB,OAAOD,sBAAsB;AAC/B,CAAC","names":["BELOW_CENTER_ANCHOR","BELOW_INNER_LEFT_ANCHOR","BOTTOM_INNER_LEFT_ANCHOR","BOTTOM_INNER_RIGHT_ANCHOR","CENTER_RIGHT_ANCHOR","TOP_INNER_LEFT_ANCHOR","TOP_INNER_RIGHT_ANCHOR","TOP_RIGHT_ANCHOR","noop","getDefaultAnchor","_a","menubar","menuitem","floating","horizontal"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/utils.ts"],"sourcesContent":["import type { FABPosition } from \"@react-md/button\";\nimport type { PositionAnchor } from \"@react-md/utils\";\nimport {\n  BELOW_CENTER_ANCHOR,\n  BELOW_INNER_LEFT_ANCHOR,\n  BOTTOM_INNER_LEFT_ANCHOR,\n  BOTTOM_INNER_RIGHT_ANCHOR,\n  CENTER_RIGHT_ANCHOR,\n  TOP_INNER_LEFT_ANCHOR,\n  TOP_INNER_RIGHT_ANCHOR,\n  TOP_RIGHT_ANCHOR,\n} from \"@react-md/utils\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const noop = (): void => {\n  // do nothing\n};\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\ninterface DefaultAnchorOptions {\n  menubar: boolean;\n  menuitem: boolean;\n  floating: FABPosition;\n  horizontal: boolean;\n}\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const getDefaultAnchor = ({\n  menubar,\n  menuitem,\n  floating,\n  horizontal,\n}: DefaultAnchorOptions): PositionAnchor => {\n  switch (floating) {\n    case \"bottom-left\":\n      return BOTTOM_INNER_LEFT_ANCHOR;\n    case \"bottom-right\":\n      return BOTTOM_INNER_RIGHT_ANCHOR;\n    case \"top-left\":\n      return TOP_INNER_LEFT_ANCHOR;\n    case \"top-right\":\n      return TOP_INNER_RIGHT_ANCHOR;\n  }\n\n  if (menubar) {\n    return menuitem ? CENTER_RIGHT_ANCHOR : BELOW_INNER_LEFT_ANCHOR;\n  }\n\n  if (horizontal) {\n    return BELOW_CENTER_ANCHOR;\n  }\n\n  if (menuitem) {\n    return TOP_RIGHT_ANCHOR;\n  }\n\n  return TOP_INNER_RIGHT_ANCHOR;\n};\n"]},"metadata":{},"sourceType":"module"}