{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useCallback } from \"react\";\nimport { useToggle } from \"@react-md/utils\";\n/**\n * @internal\n */\nexport function useFocusState(_a) {\n  var onFocus = _a.onFocus,\n    onBlur = _a.onBlur;\n  var _b = __read(useToggle(false), 3),\n    focused = _b[0],\n    setFocused = _b[1],\n    setBlurred = _b[2];\n  var handleFocus = useCallback(function (event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n    setFocused();\n  }, [setFocused, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n    setBlurred();\n  }, [setBlurred, onBlur]);\n  return [focused, handleFocus, handleBlur];\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,SAAS,QAAQ,iBAAiB;AAa3C;;;AAGA,OAAM,SAAUC,aAAa,CAACC,EAGpB;MAFRC,OAAO;IACPC,MAAM;EAEA,gBAAoCJ,SAAS,CAAC,KAAK,CAAC;IAAnDK,OAAO;IAAEC,UAAU;IAAEC,UAAU,QAAoB;EAE1D,IAAMC,WAAW,GAAGT,WAAW,CAC7B,UAACU,KAAK;IACJ,IAAIN,OAAO,EAAE;MACXA,OAAO,CAACM,KAAK,CAAC;;IAGhBH,UAAU,EAAE;EACd,CAAC,EACD,CAACA,UAAU,EAAEH,OAAO,CAAC,CACtB;EAED,IAAMO,UAAU,GAAGX,WAAW,CAC5B,UAACU,KAAK;IACJ,IAAIL,MAAM,EAAE;MACVA,MAAM,CAACK,KAAK,CAAC;;IAGfF,UAAU,EAAE;EACd,CAAC,EACD,CAACA,UAAU,EAAEH,MAAM,CAAC,CACrB;EAED,OAAO,CAACC,OAAO,EAAEG,WAAW,EAAEE,UAAU,CAAC;AAC3C","names":["useCallback","useToggle","useFocusState","_a","onFocus","onBlur","focused","setFocused","setBlurred","handleFocus","event","handleBlur"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/useFocusState.ts"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { useCallback } from \"react\";\nimport { useToggle } from \"@react-md/utils\";\n\ntype FocusElement =\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLLabelElement\n  | HTMLSelectElement\n  | HTMLDivElement;\ntype BlurEventHandler = React.FocusEventHandler<FocusElement>;\ntype FocusEventHandler = React.FocusEventHandler<FocusElement>;\n\ntype Options = Pick<HTMLAttributes<FocusElement>, \"onBlur\" | \"onFocus\">;\n\n/**\n * @internal\n */\nexport function useFocusState({\n  onFocus,\n  onBlur,\n}: Options): [boolean, FocusEventHandler, BlurEventHandler] {\n  const [focused, setFocused, setBlurred] = useToggle(false);\n\n  const handleFocus = useCallback<FocusEventHandler>(\n    (event) => {\n      if (onFocus) {\n        onFocus(event);\n      }\n\n      setFocused();\n    },\n    [setFocused, onFocus]\n  );\n\n  const handleBlur = useCallback<BlurEventHandler>(\n    (event) => {\n      if (onBlur) {\n        onBlur(event);\n      }\n\n      setBlurred();\n    },\n    [setBlurred, onBlur]\n  );\n\n  return [focused, handleFocus, handleBlur];\n}\n"]},"metadata":{},"sourceType":"module"}