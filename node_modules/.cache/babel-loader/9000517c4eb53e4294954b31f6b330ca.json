{"ast":null,"code":"import { getContrastRatio } from \"./getContrastRatio\";\n/**\n * The contrast ratio that can be used for large text where large text is\n * considered 18pt or 14pt bold.\n */\nexport var LARGE_TEXT_CONTRAST_RATIO = 3;\n/**\n * The contrast ratio that can be used for normal text.\n */\nexport var NORMAL_TEXT_CONTRAST_RATIO = 4.5;\n/**\n * The AAA contrast ratio for passing WGAC 2.0 color contrast ratios.\n */\nexport var AAA_CONTRAST_RATIO = 7;\n/**\n * Checks if there is an acceptable contrast ratio between the background and\n * foreground colors based on the provided compliance level.\n *\n * @param background - The background color to check against\n * @param foreground - The foreground color to check against\n * @param compliance - The compliance level to use or a custom number as a\n * ratio.\n * @returns true if there is enough contrast between the foreground and\n * background colors for the provided compliance level.\n */\nexport function isContrastCompliant(background, foreground, compliance) {\n  if (compliance === void 0) {\n    compliance = \"normal\";\n  }\n  var ratio;\n  switch (compliance) {\n    case \"large\":\n      ratio = LARGE_TEXT_CONTRAST_RATIO;\n      break;\n    case \"normal\":\n      ratio = NORMAL_TEXT_CONTRAST_RATIO;\n      break;\n    case \"AAA\":\n      ratio = AAA_CONTRAST_RATIO;\n      break;\n    default:\n      ratio = compliance;\n  }\n  return getContrastRatio(background, foreground) >= ratio;\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAcrD;;;;AAIA,OAAO,IAAMC,yBAAyB,GAAG,CAAC;AAE1C;;;AAGA,OAAO,IAAMC,0BAA0B,GAAG,GAAG;AAE7C;;;AAGA,OAAO,IAAMC,kBAAkB,GAAG,CAAC;AAEnC;;;;;;;;;;;AAWA,OAAM,SAAUC,mBAAmB,CACjCC,UAAqB,EACrBC,UAAqB,EACrBC,UAAuD;EAAvD;IAAAA,qBAAuD;EAAA;EAEvD,IAAIC,KAAa;EACjB,QAAQD,UAAU;IAChB,KAAK,OAAO;MACVC,KAAK,GAAGP,yBAAyB;MACjC;IACF,KAAK,QAAQ;MACXO,KAAK,GAAGN,0BAA0B;MAClC;IACF,KAAK,KAAK;MACRM,KAAK,GAAGL,kBAAkB;MAC1B;IACF;MACEK,KAAK,GAAGD,UAAU;EAAC;EAGvB,OAAOP,gBAAgB,CAACK,UAAU,EAAEC,UAAU,CAAC,IAAIE,KAAK;AAC1D","names":["getContrastRatio","LARGE_TEXT_CONTRAST_RATIO","NORMAL_TEXT_CONTRAST_RATIO","AAA_CONTRAST_RATIO","isContrastCompliant","background","foreground","compliance","ratio"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/colors/isContrastCompliant.ts"],"sourcesContent":["import { getContrastRatio } from \"./getContrastRatio\";\nimport type { HexString } from \"./hexToRGB\";\n\n/**\n * The type of contrast ratio compliance to confirm to. The ratios in order are:\n * - 3:1 for large text (18pt normal or 14pt bold)\n * - 4.5:1 for normal text\n * - 7:1 for Level AAA requirements.\n *\n * @see https://www.w3.org/TR/WCAG20/#visual-audio-contrast\n * @see https://www.w3.org/TR/WCAG20/#larger-scaledef\n */\nexport type ContrastRatioCompliance = \"large\" | \"normal\" | \"AAA\";\n\n/**\n * The contrast ratio that can be used for large text where large text is\n * considered 18pt or 14pt bold.\n */\nexport const LARGE_TEXT_CONTRAST_RATIO = 3;\n\n/**\n * The contrast ratio that can be used for normal text.\n */\nexport const NORMAL_TEXT_CONTRAST_RATIO = 4.5;\n\n/**\n * The AAA contrast ratio for passing WGAC 2.0 color contrast ratios.\n */\nexport const AAA_CONTRAST_RATIO = 7;\n\n/**\n * Checks if there is an acceptable contrast ratio between the background and\n * foreground colors based on the provided compliance level.\n *\n * @param background - The background color to check against\n * @param foreground - The foreground color to check against\n * @param compliance - The compliance level to use or a custom number as a\n * ratio.\n * @returns true if there is enough contrast between the foreground and\n * background colors for the provided compliance level.\n */\nexport function isContrastCompliant(\n  background: HexString,\n  foreground: HexString,\n  compliance: ContrastRatioCompliance | number = \"normal\"\n): boolean {\n  let ratio: number;\n  switch (compliance) {\n    case \"large\":\n      ratio = LARGE_TEXT_CONTRAST_RATIO;\n      break;\n    case \"normal\":\n      ratio = NORMAL_TEXT_CONTRAST_RATIO;\n      break;\n    case \"AAA\":\n      ratio = AAA_CONTRAST_RATIO;\n      break;\n    default:\n      ratio = compliance;\n  }\n\n  return getContrastRatio(background, foreground) >= ratio;\n}\n"]},"metadata":{},"sourceType":"module"}