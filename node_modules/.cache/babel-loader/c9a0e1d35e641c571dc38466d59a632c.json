{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { useScaleTransition } from \"@react-md/transition\";\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\n/**\n * This component conditionally renders the {@link MenuWidget} with the\n * {@link MenuKeyboardFocusProvider} based on the `visible` prop with a CSS\n * transition that can be configured.\n *\n * @remarks \\@since 5.0.0\n */\nexport var Menu = forwardRef(function Menu(_a, ref) {\n  var className = _a.className,\n    listStyle = _a.listStyle,\n    listClassName = _a.listClassName,\n    listProps = _a.listProps,\n    visible = _a.visible,\n    _b = _a.temporary,\n    temporary = _b === void 0 ? true : _b,\n    _c = _a.horizontal,\n    horizontal = _c === void 0 ? false : _c,\n    _d = _a.portal,\n    portal = _d === void 0 ? temporary : _d,\n    portalInto = _a.portalInto,\n    portalIntoId = _a.portalIntoId,\n    appear = _a.appear,\n    enter = _a.enter,\n    exit = _a.exit,\n    onEnter = _a.onEnter,\n    onEntering = _a.onEntering,\n    onEntered = _a.onEntered,\n    onExit = _a.onExit,\n    onExiting = _a.onExiting,\n    onExited = _a.onExited,\n    timeout = _a.timeout,\n    classNames = _a.classNames,\n    children = _a.children,\n    props = __rest(_a, [\"className\", \"listStyle\", \"listClassName\", \"listProps\", \"visible\", \"temporary\", \"horizontal\", \"portal\", \"portalInto\", \"portalIntoId\", \"appear\", \"enter\", \"exit\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"timeout\", \"classNames\", \"children\"]);\n  var _e = useScaleTransition({\n      nodeRef: ref,\n      className: className,\n      transitionIn: visible,\n      vertical: !horizontal,\n      temporary: temporary,\n      timeout: timeout,\n      classNames: classNames,\n      appear: appear,\n      enter: enter,\n      exit: exit,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited\n    }),\n    elementProps = _e.elementProps,\n    rendered = _e.rendered,\n    stage = _e.stage;\n  return _jsx(ConditionalPortal, __assign({\n    portal: portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, {\n    children: rendered && _jsx(MenuKeyboardFocusProvider, __assign({\n      horizontal: horizontal\n    }, {\n      children: _jsx(MenuWidget, __assign({\n        hidden: !temporary && stage === \"exited\"\n      }, props, elementProps, {\n        horizontal: horizontal\n      }, {\n        children: _jsx(List, __assign({}, listProps, {\n          style: listStyle !== null && listStyle !== void 0 ? listStyle : listProps === null || listProps === void 0 ? void 0 : listProps.style,\n          className: listClassName !== null && listClassName !== void 0 ? listClassName : listProps === null || listProps === void 0 ? void 0 : listProps.className,\n          horizontal: horizontal,\n          onClick: function (event) {\n            var _a;\n            (_a = listProps === null || listProps === void 0 ? void 0 : listProps.onClick) === null || _a === void 0 ? void 0 : _a.call(listProps, event);\n            // this makes it so you can click on the menu/list without\n            // closing the menu\n            if (event.target === event.currentTarget) {\n              event.stopPropagation();\n            }\n          }\n        }, {\n          children: children\n        }))\n      }))\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,kBAAkB,QAAQ,sBAAsB;AAGzD,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,UAAU,QAAQ,cAAc;AAGzC;;;;;;;AAOA,OAAO,IAAMC,IAAI,GAAGN,UAAU,CAC5B,SAASM,IAAI,CACXC,EAwBC,EACDC,GAAG;EAxBD,aAAS;IACTC,SAAS;IACTC,aAAa;IACbC,SAAS;IACTC,OAAO;IACPC,iBAAgB;IAAhBC,SAAS,mBAAG,IAAI;IAChBC,kBAAkB;IAAlBC,UAAU,mBAAG,KAAK;IAClBC,cAAkB;IAAlBC,MAAM,mBAAGJ,SAAS;IAClBK,UAAU;IACVC,YAAY;IACZC,MAAM;IACNC,KAAK;IACLC,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACVC,QAAQ;IACLC,KAAK,cAvBV,+QAwBC,CADS;EAIJ,SAAoC9B,kBAAkB,CAAC;MAC3D+B,OAAO,EAAE1B,GAAG;MACZ2B,SAAS;MACTC,YAAY,EAAExB,OAAO;MACrByB,QAAQ,EAAE,CAACrB,UAAU;MACrBF,SAAS;MACTgB,OAAO;MACPC,UAAU;MACVV,MAAM;MACNC,KAAK;MACLC,IAAI;MACJC,OAAO;MACPC,UAAU;MACVC,SAAS;MACTC,MAAM;MACNC,SAAS;MACTC,QAAQ;KACT,CAAC;IAjBMS,YAAY;IAAEC,QAAQ;IAAEC,KAAK,WAiBnC;EAEF,OACEC,KAACvC,iBAAiB;IAChBgB,MAAM,EAAEA,MAAM;IACdC,UAAU,EAAEA,UAAU;IACtBC,YAAY,EAAEA;EAAY;IAAAY,UAEzBO,QAAQ,IACPE,KAACrC,yBAAyB;MAACY,UAAU,EAAEA;IAAU;MAAAgB,UAC/CS,KAACpC,UAAU;QACTqC,MAAM,EAAE,CAAC5B,SAAS,IAAI0B,KAAK,KAAK;MAAQ,GACpCP,KAAK,EACLK,YAAY;QAChBtB,UAAU,EAAEA;MAAU;QAAAgB,UAEtBS,KAACxC,IAAI,eACCU,SAAS;UACbgC,KAAK,EAAElC,SAAS,aAATA,SAAS,cAATA,SAAS,GAAIE,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgC,KAAK;UACpCR,SAAS,EAAEzB,aAAa,aAAbA,aAAa,cAAbA,aAAa,GAAIC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwB,SAAS;UAChDnB,UAAU,EAAEA,UAAU;UACtB4B,OAAO,EAAE,UAACC,KAAK;;YACb,eAAS,aAATlC,SAAS,uBAATA,SAAS,CAAEiC,OAAO,0DAAGC,KAAK,CAAC;YAE3B;YACA;YACA,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACE,aAAa,EAAE;cACxCF,KAAK,CAACG,eAAe,EAAE;;UAE3B;QAAC;UAAAhB,UAEAA;QAAQ;MACJ;IACI;EAEhB,GACiB;AAExB,CAAC,CACF","names":["forwardRef","List","ConditionalPortal","useScaleTransition","MenuKeyboardFocusProvider","MenuWidget","Menu","_a","ref","listStyle","listClassName","listProps","visible","_b","temporary","_c","horizontal","_d","portal","portalInto","portalIntoId","appear","enter","exit","onEnter","onEntering","onEntered","onExit","onExiting","onExited","timeout","classNames","children","props","nodeRef","className","transitionIn","vertical","elementProps","rendered","stage","_jsx","hidden","style","onClick","event","target","currentTarget","stopPropagation"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/Menu.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { useScaleTransition } from \"@react-md/transition\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\n\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\nimport type { MenuProps } from \"./types\";\n\n/**\n * This component conditionally renders the {@link MenuWidget} with the\n * {@link MenuKeyboardFocusProvider} based on the `visible` prop with a CSS\n * transition that can be configured.\n *\n * @remarks \\@since 5.0.0\n */\nexport const Menu = forwardRef<HTMLDivElement, LabelRequiredForA11y<MenuProps>>(\n  function Menu(\n    {\n      className,\n      listStyle,\n      listClassName,\n      listProps,\n      visible,\n      temporary = true,\n      horizontal = false,\n      portal = temporary,\n      portalInto,\n      portalIntoId,\n      appear,\n      enter,\n      exit,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      timeout,\n      classNames,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    const { elementProps, rendered, stage } = useScaleTransition({\n      nodeRef: ref,\n      className,\n      transitionIn: visible,\n      vertical: !horizontal,\n      temporary,\n      timeout,\n      classNames,\n      appear,\n      enter,\n      exit,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n    });\n\n    return (\n      <ConditionalPortal\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n      >\n        {rendered && (\n          <MenuKeyboardFocusProvider horizontal={horizontal}>\n            <MenuWidget\n              hidden={!temporary && stage === \"exited\"}\n              {...props}\n              {...elementProps}\n              horizontal={horizontal}\n            >\n              <List\n                {...listProps}\n                style={listStyle ?? listProps?.style}\n                className={listClassName ?? listProps?.className}\n                horizontal={horizontal}\n                onClick={(event) => {\n                  listProps?.onClick?.(event);\n\n                  // this makes it so you can click on the menu/list without\n                  // closing the menu\n                  if (event.target === event.currentTarget) {\n                    event.stopPropagation();\n                  }\n                }}\n              >\n                {children}\n              </List>\n            </MenuWidget>\n          </MenuKeyboardFocusProvider>\n        )}\n      </ConditionalPortal>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}