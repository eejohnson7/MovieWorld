{"ast":null,"code":"/**\n * Creates an \"amazing\" regular expression that matches the letters in order and\n * escapes any letters that could be part of a regex. This should normally be\n * used in fuzzy filters or determining fuzzy matches.\n *\n * @param query - The query string to convert into a \"fuzzy\" regular expression\n * @returns The \"fuzzy\" regular expression that can be used to determine\n * matches.\n */\nexport function getFuzzyRegExp(query) {\n  return new RegExp(\"\".concat(query).split(\"\").join(\"\\\\w*\").replace(/(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)/g, \"\\\\$1\")\n  // Couldn't get the matching of two '*' working, so replace them here..\n  .replace(/\\*\\*/g, \"*\\\\*\"), \"i\");\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;AASA,OAAM,SAAUA,cAAc,CAACC,KAAa;EAC1C,OAAO,IAAIC,MAAM,CACf,UAAGD,KAAK,CAAE,CACPE,KAAK,CAAC,EAAE,CAAC,CACTC,IAAI,CAAC,MAAM,CAAC,CACZC,OAAO,CAAC,sDAAsD,EAAE,MAAM;EACvE;EAAA,CACCA,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAC3B,GAAG,CACJ;AACH","names":["getFuzzyRegExp","query","RegExp","split","join","replace"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/search/getFuzzyRegExp.ts"],"sourcesContent":["/**\n * Creates an \"amazing\" regular expression that matches the letters in order and\n * escapes any letters that could be part of a regex. This should normally be\n * used in fuzzy filters or determining fuzzy matches.\n *\n * @param query - The query string to convert into a \"fuzzy\" regular expression\n * @returns The \"fuzzy\" regular expression that can be used to determine\n * matches.\n */\nexport function getFuzzyRegExp(query: string): RegExp {\n  return new RegExp(\n    `${query}`\n      .split(\"\")\n      .join(\"\\\\w*\")\n      .replace(/(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)/g, \"\\\\$1\")\n      // Couldn't get the matching of two '*' working, so replace them here..\n      .replace(/\\*\\*/g, \"*\\\\*\"),\n    \"i\"\n  );\n}\n"]},"metadata":{},"sourceType":"module"}