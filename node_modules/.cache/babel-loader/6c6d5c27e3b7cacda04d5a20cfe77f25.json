{"ast":null,"code":"import { createContext, useContext } from \"react\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nvar context = createContext({\n  activeId: \"\",\n  setActiveId: function () {\n    throw new Error(\"ActiveDescendantMovementProvider must be a parent component.\");\n  }\n});\ncontext.displayName = \"ActiveDescendant\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport var ActiveDescendantContextProvider = context.Provider;\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function useActiveDescendantContext() {\n  return useContext(context);\n}","map":{"version":3,"mappings":"AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAWjD;;;;AAIA,IAAMC,OAAO,GAAGF,aAAa,CAA0B;EACrDG,QAAQ,EAAE,EAAE;EACZC,WAAW;IACT,MAAM,IAAIC,KAAK,CACb,8DAA8D,CAC/D;EACH;CACD,CAAC;AACFH,OAAO,CAACI,WAAW,GAAG,kBAAkB;AAExC;;;;AAIA,OAAe,IAAUC,+BAA+B,GAAKL,OAAO,SAAZ;AAExD;;;;AAIA,OAAM,SAAUM,0BAA0B;EACxC,OAAOP,UAAU,CAACC,OAAO,CAAC;AAC5B","names":["createContext","useContext","context","activeId","setActiveId","Error","displayName","ActiveDescendantContextProvider","useActiveDescendantContext"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/keyboardMovement/activeDescendantContext.ts"],"sourcesContent":["import type { Dispatch, SetStateAction } from \"react\";\nimport { createContext, useContext } from \"react\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport interface ActiveDescendantContext {\n  activeId: string;\n  setActiveId: Dispatch<SetStateAction<string>>;\n}\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nconst context = createContext<ActiveDescendantContext>({\n  activeId: \"\",\n  setActiveId() {\n    throw new Error(\n      \"ActiveDescendantMovementProvider must be a parent component.\"\n    );\n  },\n});\ncontext.displayName = \"ActiveDescendant\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const { Provider: ActiveDescendantContextProvider } = context;\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function useActiveDescendantContext(): Readonly<ActiveDescendantContext> {\n  return useContext(context);\n}\n"]},"metadata":{},"sourceType":"module"}