{"ast":null,"code":"import { useCallback, useRef } from \"react\";\nimport { applyRef } from \"../applyRef\";\nimport { useKeyboardFocusContext } from \"./movementContext\";\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport function useKeyboardFocusableElement(ref) {\n  var _a = useKeyboardFocusContext(),\n    attach = _a.attach,\n    detach = _a.detach;\n  var nodeRef = useRef(null);\n  return useCallback(function (instance) {\n    applyRef(instance, ref);\n    if (instance) {\n      attach(instance);\n    } else if (nodeRef.current) {\n      detach(nodeRef.current);\n    }\n    nodeRef.current = instance;\n  }, [attach, detach, ref]);\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAE3C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,uBAAuB,QAAQ,mBAAmB;AAE3D;;;;AAIA,OAAM,SAAUC,2BAA2B,CACzCC,GAAY;EAEN,SAAqBF,uBAAuB,EAAE;IAA5CG,MAAM;IAAEC,MAAM,YAA8B;EACpD,IAAMC,OAAO,GAAGP,MAAM,CAAW,IAAI,CAAC;EAEtC,OAAOD,WAAW,CAChB,UAACS,QAAkB;IACjBP,QAAQ,CAACO,QAAQ,EAAEJ,GAAG,CAAC;IACvB,IAAII,QAAQ,EAAE;MACZH,MAAM,CAACG,QAAQ,CAAC;KACjB,MAAM,IAAID,OAAO,CAACE,OAAO,EAAE;MAC1BH,MAAM,CAACC,OAAO,CAACE,OAAO,CAAC;;IAGzBF,OAAO,CAACE,OAAO,GAAGD,QAAQ;EAC5B,CAAC,EACD,CAACH,MAAM,EAAEC,MAAM,EAAEF,GAAG,CAAC,CACtB;AACH","names":["useCallback","useRef","applyRef","useKeyboardFocusContext","useKeyboardFocusableElement","ref","attach","detach","nodeRef","instance","current"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/keyboardMovement/useKeyboardFocusableElement.ts"],"sourcesContent":["import type { Ref, RefCallback } from \"react\";\nimport { useCallback, useRef } from \"react\";\n\nimport { applyRef } from \"../applyRef\";\nimport { useKeyboardFocusContext } from \"./movementContext\";\n\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport function useKeyboardFocusableElement<E extends HTMLElement>(\n  ref?: Ref<E>\n): RefCallback<E> {\n  const { attach, detach } = useKeyboardFocusContext();\n  const nodeRef = useRef<E | null>(null);\n\n  return useCallback(\n    (instance: E | null) => {\n      applyRef(instance, ref);\n      if (instance) {\n        attach(instance);\n      } else if (nodeRef.current) {\n        detach(nodeRef.current);\n      }\n\n      nodeRef.current = instance;\n    },\n    [attach, detach, ref]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}