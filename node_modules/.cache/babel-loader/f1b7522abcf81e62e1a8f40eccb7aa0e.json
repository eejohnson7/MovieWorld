{"ast":null,"code":"/**\n * A simple util that will ensure that a number is within the optional min and\n * max values.\n *\n * @param value - The number to ensure that is within the range\n * @param min - The optional min value\n * @param max - The optional max value\n * @returns the updated value\n * @remarks \\@since 2.5.0\n */\nexport function withinRange(value, min, max) {\n  var nextValue = value;\n  if (typeof min === \"number\") {\n    nextValue = Math.max(min, nextValue);\n  }\n  if (typeof max === \"number\") {\n    nextValue = Math.min(max, nextValue);\n  }\n  return nextValue;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;AAUA,OAAM,SAAUA,WAAW,CACzBC,KAAa,EACbC,GAAuB,EACvBC,GAAuB;EAEvB,IAAIC,SAAS,GAAGH,KAAK;EACrB,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;IAC3BE,SAAS,GAAGC,IAAI,CAACF,GAAG,CAACD,GAAG,EAAEE,SAAS,CAAC;;EAGtC,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC3BC,SAAS,GAAGC,IAAI,CAACH,GAAG,CAACC,GAAG,EAAEC,SAAS,CAAC;;EAGtC,OAAOA,SAAS;AAClB","names":["withinRange","value","min","max","nextValue","Math"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/withinRange.ts"],"sourcesContent":["/**\n * A simple util that will ensure that a number is within the optional min and\n * max values.\n *\n * @param value - The number to ensure that is within the range\n * @param min - The optional min value\n * @param max - The optional max value\n * @returns the updated value\n * @remarks \\@since 2.5.0\n */\nexport function withinRange(\n  value: number,\n  min: number | undefined,\n  max: number | undefined\n): number {\n  let nextValue = value;\n  if (typeof min === \"number\") {\n    nextValue = Math.max(min, nextValue);\n  }\n\n  if (typeof max === \"number\") {\n    nextValue = Math.min(max, nextValue);\n  }\n\n  return nextValue;\n}\n"]},"metadata":{},"sourceType":"module"}