{"ast":null,"code":"import { PROGRAMATICALLY_FOCUSABLE, TAB_FOCUSABLE } from \"./constants\";\n/**\n * Checks if an element is focusable.\n *\n * @see {@link ElementFocusType}\n * @remarks \\@since 2.8.0\n * @param element - The element to check\n * @param type - The focus type to compare against\n * @returns true if the element is focusable\n */\nexport function isFocusable(element, type) {\n  if (type === void 0) {\n    type = \"programmatic\";\n  }\n  return \"matches\" in element && element.matches(type === \"programmatic\" ? PROGRAMATICALLY_FOCUSABLE : TAB_FOCUSABLE);\n}","map":{"version":3,"mappings":"AAAA,SAASA,yBAAyB,EAAEC,aAAa,QAAQ,aAAa;AAgBtE;;;;;;;;;AASA,OAAM,SAAUC,WAAW,CACzBC,OAAwC,EACxCC,IAAuC;EAAvC;IAAAA,qBAAuC;EAAA;EAEvC,OACE,SAAS,IAAID,OAAO,IACpBA,OAAO,CAACE,OAAO,CACbD,IAAI,KAAK,cAAc,GAAGJ,yBAAyB,GAAGC,aAAa,CACpE;AAEL","names":["PROGRAMATICALLY_FOCUSABLE","TAB_FOCUSABLE","isFocusable","element","type","matches"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/wia-aria/isFocusable.ts"],"sourcesContent":["import { PROGRAMATICALLY_FOCUSABLE, TAB_FOCUSABLE } from \"./constants\";\n\n/**\n * An element can be tab focused if it is:\n * - an anchor or area with an `href`\n * - a non-disabled `input` element that is not `type=\"hidden\"`\n * - a non-disabled `button`, `textarea`, or `select` element\n * - an element with a `tabIndex >= 0`\n *\n * An element can be noted as \"programmatically focusable only\"  has the above\n * rules, but the `tabIndex` will be set to `-1`.\n *\n * @remarks \\@since 2.8.0\n */\nexport type ElementFocusType = \"tab\" | \"programmatic\";\n\n/**\n * Checks if an element is focusable.\n *\n * @see {@link ElementFocusType}\n * @remarks \\@since 2.8.0\n * @param element - The element to check\n * @param type - The focus type to compare against\n * @returns true if the element is focusable\n */\nexport function isFocusable(\n  element: HTMLElement | Document | Window,\n  type: ElementFocusType = \"programmatic\"\n): element is HTMLElement {\n  return (\n    \"matches\" in element &&\n    element.matches(\n      type === \"programmatic\" ? PROGRAMATICALLY_FOCUSABLE : TAB_FOCUSABLE\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}