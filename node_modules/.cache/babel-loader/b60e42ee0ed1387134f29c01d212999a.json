{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { Label } from \"./Label\";\nvar block = bem(\"rmd-floating-label\");\n/**\n * This is an extension of the `Label` component that is used with text fields\n * and textareas to float above the input area.\n */\nexport var FloatingLabel = forwardRef(function FloatingLabel(_a, ref) {\n  var className = _a.className,\n    dense = _a.dense,\n    valued = _a.valued,\n    floating = _a.floating,\n    _b = _a.error,\n    error = _b === void 0 ? false : _b,\n    _c = _a.active,\n    active = _c === void 0 ? false : _c,\n    _d = _a.disabled,\n    disabled = _d === void 0 ? false : _d,\n    props = __rest(_a, [\"className\", \"dense\", \"valued\", \"floating\", \"error\", \"active\", \"disabled\"]);\n  return _jsx(Label, __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      dense: dense,\n      active: floating,\n      inactive: valued && !active && !error && !disabled\n    }), className),\n    error: error,\n    active: active,\n    disabled: disabled\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AAGrC,SAASC,KAAK,QAAQ,SAAS;AAmB/B,IAAMC,KAAK,GAAGF,GAAG,CAAC,oBAAoB,CAAC;AAEvC;;;;AAIA,OAAO,IAAMG,aAAa,GAAGL,UAAU,CACrC,SAASK,aAAa,CACpBC,EASC,EACDC,GAAG;EATD,aAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,aAAa;IAAbC,KAAK,mBAAG,KAAK;IACbC,cAAc;IAAdC,MAAM,mBAAG,KAAK;IACdC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;IACbC,KAAK,cARV,2EASC,CADS;EAIV,OACEC,KAACf,KAAK,eACAc,KAAK;IACTV,GAAG,EAAEA,GAAG;IACRY,SAAS,EAAElB,EAAE,CACXG,KAAK,CAAC;MACJI,KAAK;MACLM,MAAM,EAAEJ,QAAQ;MAChBU,QAAQ,EAAEX,MAAM,IAAI,CAACK,MAAM,IAAI,CAACF,KAAK,IAAI,CAACI;KAC3C,CAAC,EACFG,SAAS,CACV;IACDP,KAAK,EAAEA,KAAK;IACZE,MAAM,EAAEA,MAAM;IACdE,QAAQ,EAAEA;EAAQ,GAClB;AAEN,CAAC,CACF","names":["forwardRef","cn","bem","Label","block","FloatingLabel","_a","ref","dense","valued","floating","_b","error","_c","active","_d","disabled","props","_jsx","className","inactive"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/label/FloatingLabel.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport type { LabelProps } from \"./Label\";\nimport { Label } from \"./Label\";\n\nexport interface FloatingLabelProps extends LabelProps {\n  /**\n   * Boolean if the text input or textarea currently have a value.\n   */\n  valued: boolean;\n\n  /**\n   * Boolean if it should use the dense spec.\n   */\n  dense?: boolean;\n\n  /**\n   * Boolean if the label is currently floating over the text field.\n   */\n  floating?: boolean;\n}\n\nconst block = bem(\"rmd-floating-label\");\n\n/**\n * This is an extension of the `Label` component that is used with text fields\n * and textareas to float above the input area.\n */\nexport const FloatingLabel = forwardRef<HTMLLabelElement, FloatingLabelProps>(\n  function FloatingLabel(\n    {\n      className,\n      dense,\n      valued,\n      floating,\n      error = false,\n      active = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <Label\n        {...props}\n        ref={ref}\n        className={cn(\n          block({\n            dense,\n            active: floating,\n            inactive: valued && !active && !error && !disabled,\n          }),\n          className\n        )}\n        error={error}\n        active={active}\n        disabled={disabled}\n      />\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}