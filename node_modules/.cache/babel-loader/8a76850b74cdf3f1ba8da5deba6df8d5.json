{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { List } from \"@react-md/list\";\n/**\n * If a menu or menubar contains more than one group of menuitemradio elements,\n * or if the menu contains one group and other, unrelated menu items, authors\n * SHOULD nest each set of related menuitemradio elements in an element using\n * the group role, and authors SHOULD delimit the group from other menu items\n * with an element using the separator role.\n *\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio}\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu, MenuItemGroup, MenuItemSeparator } from \"@react-md/menu\";\n * import { MenuItemRadio, MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-id\"\n *         checked={checked}\n *         onCheckedChange={nextChecked => setChecked(nextChecked)}\n *       >\n *         Light mode\n *       </MenuItemSwitch>\n *       <MenuItemSeparator />\n *       <MenuItemGroup aria-label=\"My Group Label\">\n *         <MenuItemRadio\n *           id=\"radio-1\"\n *           checked={value === \"value1\"}\n *           onCheckedChange={() => setValue(\"value1\")}\n *         >\n *           Radio 1\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-2\"\n *           checked={value === \"value2\"}\n *           onCheckedChange={() => setValue(\"value2\")}\n *         >\n *           Radio 2\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-3\"\n *           checked={value === \"value3\"}\n *           onCheckedChange={() => setValue(\"value3\")}\n *         >\n *           Radio 3\n *         </MenuItemRadio>\n *       </MenuItemGroup>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport var MenuItemGroup = forwardRef(function MenuItemGroup(_a, ref) {\n  var children = _a.children,\n    props = __rest(_a, [\"children\"]);\n  return _jsx(List, __assign({}, props, {\n    ref: ref,\n    role: \"group\"\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAASC,IAAI,QAAQ,gBAAgB;AAUrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,OAAO,IAAMC,aAAa,GAAGF,UAAU,CACrC,SAASE,aAAa,CAACC,EAAsB,EAAEC,GAAG;EAAzB,YAAQ;IAAKC,KAAK,cAApB,YAAsB,CAAF;EACzC,OACEC,KAACL,IAAI,eAAKI,KAAK;IAAED,GAAG,EAAEA,GAAG;IAAEG,IAAI,EAAC;EAAO;IAAAC,UACpCA;EAAQ,GACJ;AAEX,CAAC,CACF","names":["forwardRef","List","MenuItemGroup","_a","ref","props","_jsx","role","children"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/MenuItemGroup.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type { ListElement, ListProps } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\n\n/** @remarks \\@since 5.0.0 */\nexport type MenuItemGroupProps = LabelRequiredForA11y<\n  Omit<ListProps, \"role\">\n> & {\n  children: ReactNode;\n};\n\n/**\n * If a menu or menubar contains more than one group of menuitemradio elements,\n * or if the menu contains one group and other, unrelated menu items, authors\n * SHOULD nest each set of related menuitemradio elements in an element using\n * the group role, and authors SHOULD delimit the group from other menu items\n * with an element using the separator role.\n *\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio}\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu, MenuItemGroup, MenuItemSeparator } from \"@react-md/menu\";\n * import { MenuItemRadio, MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-id\"\n *         checked={checked}\n *         onCheckedChange={nextChecked => setChecked(nextChecked)}\n *       >\n *         Light mode\n *       </MenuItemSwitch>\n *       <MenuItemSeparator />\n *       <MenuItemGroup aria-label=\"My Group Label\">\n *         <MenuItemRadio\n *           id=\"radio-1\"\n *           checked={value === \"value1\"}\n *           onCheckedChange={() => setValue(\"value1\")}\n *         >\n *           Radio 1\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-2\"\n *           checked={value === \"value2\"}\n *           onCheckedChange={() => setValue(\"value2\")}\n *         >\n *           Radio 2\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-3\"\n *           checked={value === \"value3\"}\n *           onCheckedChange={() => setValue(\"value3\")}\n *         >\n *           Radio 3\n *         </MenuItemRadio>\n *       </MenuItemGroup>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport const MenuItemGroup = forwardRef<ListElement, MenuItemGroupProps>(\n  function MenuItemGroup({ children, ...props }, ref) {\n    return (\n      <List {...props} ref={ref} role=\"group\">\n        {children}\n      </List>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}