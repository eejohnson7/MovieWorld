{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-toggle-container\");\n/**\n * The `ToggleContainer` component should generally be used around a\n * custom `\"checkbox\"`, `\"radio\"`, or `\"switch\"` component to help with\n * additional styles. This is mostly an internal component so I'm not\n * sure useful it will be though.\n */\nexport var ToggleContainer = forwardRef(function ToggleContainer(_a, ref) {\n  var className = _a.className,\n    _b = _a.inline,\n    inline = _b === void 0 ? false : _b,\n    _c = _a.stacked,\n    stacked = _c === void 0 ? false : _c,\n    children = _a.children,\n    props = __rest(_a, [\"className\", \"inline\", \"stacked\", \"children\"]);\n  return _jsx(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      stacked: stacked,\n      inline: inline\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AAgBrC,IAAMC,KAAK,GAAGD,GAAG,CAAC,sBAAsB,CAAC;AAEzC;;;;;;AAMA,OAAO,IAAME,eAAe,GAAGJ,UAAU,CACvC,SAASI,eAAe,CACtBC,EAAkE,EAClEC,GAAG;EADD,aAAS;IAAEC,cAAc;IAAdC,MAAM,mBAAG,KAAK;IAAEC,eAAe;IAAfC,OAAO,mBAAG,KAAK;IAAEC,QAAQ;IAAKC,KAAK,cAAhE,8CAAkE,CAAF;EAGhE,OACEC,yBACMD,KAAK;IACTN,GAAG,EAAEA,GAAG;IACRQ,SAAS,EAAEb,EAAE,CAACE,KAAK,CAAC;MAAEO,OAAO;MAAEF,MAAM;IAAA,CAAE,CAAC,EAAEM,SAAS;EAAC;IAAAH,UAEnDA;EAAQ,GACL;AAEV,CAAC,CACF","names":["forwardRef","cn","bem","block","ToggleContainer","_a","ref","_b","inline","_c","stacked","children","props","_jsx","className"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/toggle/ToggleContainer.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport interface ToggleContainerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Boolean if the input toggle should be rendered as `inline-flex` instead of\n   * `flex`.\n   */\n  inline?: boolean;\n\n  /**\n   * Boolean if the label should be stacked above/below the input toggle instead\n   * of being rendered on the same line.\n   */\n  stacked?: boolean;\n}\n\nconst block = bem(\"rmd-toggle-container\");\n\n/**\n * The `ToggleContainer` component should generally be used around a\n * custom `\"checkbox\"`, `\"radio\"`, or `\"switch\"` component to help with\n * additional styles. This is mostly an internal component so I'm not\n * sure useful it will be though.\n */\nexport const ToggleContainer = forwardRef<HTMLDivElement, ToggleContainerProps>(\n  function ToggleContainer(\n    { className, inline = false, stacked = false, children, ...props },\n    ref\n  ) {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        className={cn(block({ stacked, inline }), className)}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}