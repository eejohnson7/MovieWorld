{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRef, useState } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { Sheet } from \"@react-md/sheet\";\nimport { useOnUnmount } from \"@react-md/utils\";\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\n/**\n * Implements a `Menu` using the `Sheet` component that probably shouldn't\n * really be used externally.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function MenuSheet(_a) {\n  var id = _a.id,\n    children = _a.children,\n    header = _a.header,\n    footer = _a.footer,\n    horizontal = _a.horizontal,\n    menuRef = _a.menuRef,\n    menuProps = _a.menuProps,\n    listStyle = _a.listStyle,\n    listClassName = _a.listClassName,\n    listProps = _a.listProps,\n    _b = _a.position,\n    position = _b === void 0 ? \"bottom\" : _b,\n    _c = _a.verticalSize,\n    verticalSize = _c === void 0 ? \"touch\" : _c,\n    onClick = _a.onClick,\n    overlayProps = _a.overlayProps,\n    onRequestClose = _a.onRequestClose,\n    props = __rest(_a, [\"id\", \"children\", \"header\", \"footer\", \"horizontal\", \"menuRef\", \"menuProps\", \"listStyle\", \"listClassName\", \"listProps\", \"position\", \"verticalSize\", \"onClick\", \"overlayProps\", \"onRequestClose\"]);\n  var ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"];\n  var listRef = useRef(null);\n  // Since there is the possibility of other tab focusable elements within the\n  // sheet and the menu items are programmatically focused, the menu's tabIndex\n  // needs to be set to `-1` while one of the child menu items are focused. This\n  // allows Shift+Tab correctly focuses the previous focusable element within\n  // the sheet. Since `onFocus` and `onBlur` will be bubbled up to the menu\n  // widget each time a new MenuItem is focused, only disable the focused state\n  // if the blur event is fired without another focus event within an animation\n  // frame.\n  var _d = __read(useState(false), 2),\n    focused = _d[0],\n    setFocused = _d[1];\n  var blurredFrame = useRef(0);\n  useOnUnmount(function () {\n    window.cancelAnimationFrame(blurredFrame.current);\n  });\n  return _jsxs(Sheet, __assign({\n    id: \"\".concat(id, \"-sheet\")\n  }, props, {\n    onRequestClose: onRequestClose,\n    overlayProps: __assign(__assign({}, overlayProps), {\n      onClick: function (event) {\n        var _a;\n        (_a = overlayProps === null || overlayProps === void 0 ? void 0 : overlayProps.onClick) === null || _a === void 0 ? void 0 : _a.call(overlayProps, event);\n        // prevent closing parent menus if the overlay element is clicked.\n        event.stopPropagation();\n        onRequestClose();\n      }\n    }),\n    position: position,\n    verticalSize: verticalSize,\n    onClick: function (event) {\n      var _a;\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n      // Prevent closing parent sheet/menus if an element in the header or\n      // footer is clicked\n      if (!(event.target instanceof HTMLElement) || !((_a = listRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    children: [header, _jsx(MenuKeyboardFocusProvider, __assign({\n      horizontal: horizontal\n    }, {\n      children: _jsx(MenuWidget, __assign({\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        id: id,\n        ref: menuRef,\n        tabIndex: focused ? -1 : 0\n      }, menuProps, {\n        onFocus: function (event) {\n          var _a;\n          (_a = menuProps === null || menuProps === void 0 ? void 0 : menuProps.onFocus) === null || _a === void 0 ? void 0 : _a.call(menuProps, event);\n          window.cancelAnimationFrame(blurredFrame.current);\n          setFocused(true);\n        },\n        onBlur: function (event) {\n          var _a;\n          (_a = menuProps === null || menuProps === void 0 ? void 0 : menuProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(menuProps, event);\n          blurredFrame.current = window.requestAnimationFrame(function () {\n            setFocused(false);\n          });\n        },\n        onKeyDown: function (event) {\n          var _a;\n          // the tab keypress should use the sheet's behavior instead of\n          // closing the menus\n          if (event.key === \"Tab\") {\n            return;\n          }\n          (_a = menuProps === null || menuProps === void 0 ? void 0 : menuProps.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(menuProps, event);\n        },\n        disableElevation: true\n      }, {\n        children: _jsx(List, __assign({}, listProps, {\n          style: listStyle !== null && listStyle !== void 0 ? listStyle : listProps === null || listProps === void 0 ? void 0 : listProps.style,\n          className: listClassName !== null && listClassName !== void 0 ? listClassName : listProps === null || listProps === void 0 ? void 0 : listProps.className,\n          ref: listRef,\n          horizontal: horizontal,\n          onClick: function (event) {\n            var _a;\n            (_a = listProps === null || listProps === void 0 ? void 0 : listProps.onClick) === null || _a === void 0 ? void 0 : _a.call(listProps, event);\n            // this makes it so you can click on the menu/list without\n            // closing the menu\n            if (event.target === event.currentTarget) {\n              event.stopPropagation();\n            }\n          }\n        }, {\n          children: children\n        }))\n      }))\n    })), footer]\n  }));\n}","map":{"version":3,"mappings":"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","names":["useRef","useState","List","Sheet","useOnUnmount","MenuKeyboardFocusProvider","MenuWidget","MenuSheet","_a","children","header","footer","horizontal","menuRef","menuProps","listStyle","listClassName","listProps","_b","position","_c","verticalSize","onClick","overlayProps","onRequestClose","props","ariaLabel","ariaLabelledBy","listRef","focused","setFocused","blurredFrame","window","cancelAnimationFrame","current","_jsxs","id","event","stopPropagation","target","HTMLElement","contains","_jsx","ref","tabIndex","onFocus","onBlur","requestAnimationFrame","onKeyDown","key","disableElevation","style","className","currentTarget"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/MenuSheet.tsx"],"sourcesContent":["import type { HTMLAttributes, ReactElement, ReactNode, Ref } from \"react\";\nimport { useRef, useState } from \"react\";\nimport type { ListElement } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport type { BaseSheetProps } from \"@react-md/sheet\";\nimport { Sheet } from \"@react-md/sheet\";\nimport type {\n  KeyboardFocusHookOptions,\n  LabelRequiredForA11y,\n} from \"@react-md/utils\";\nimport { useOnUnmount } from \"@react-md/utils\";\n\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\nimport type { MenuListProps, MenuOrientationProps } from \"./types\";\n\n/** @remarks \\@since 5.0.0 */\nexport interface MenuSheetProps\n  extends BaseSheetProps,\n    KeyboardFocusHookOptions<HTMLDivElement>,\n    MenuOrientationProps,\n    MenuListProps {\n  /** {@inheritDoc MenuConfiguration.sheetHeader} */\n  header?: ReactNode;\n  /** {@inheritDoc MenuConfiguration.sheetFooter} */\n  footer?: ReactNode;\n\n  /**\n   * The `Menu`s children.\n   */\n  children: ReactNode;\n\n  /**\n   * This should be the `menuRef` returned by the `useMenu` hook so that the\n   * menu can be focused on mount.\n   */\n  menuRef: Ref<HTMLDivElement>;\n\n  /**\n   * Any additional props that should be passed to the `Menu` component.\n   */\n  menuProps?: HTMLAttributes<HTMLDivElement>;\n}\n\n/**\n * Implements a `Menu` using the `Sheet` component that probably shouldn't\n * really be used externally.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function MenuSheet({\n  id,\n  children,\n  header,\n  footer,\n  horizontal,\n  menuRef,\n  menuProps,\n  listStyle,\n  listClassName,\n  listProps,\n  position = \"bottom\",\n  verticalSize = \"touch\",\n  onClick,\n  overlayProps,\n  onRequestClose,\n  ...props\n}: LabelRequiredForA11y<MenuSheetProps>): ReactElement {\n  const { \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy } = props;\n  const listRef = useRef<ListElement>(null);\n\n  // Since there is the possibility of other tab focusable elements within the\n  // sheet and the menu items are programmatically focused, the menu's tabIndex\n  // needs to be set to `-1` while one of the child menu items are focused. This\n  // allows Shift+Tab correctly focuses the previous focusable element within\n  // the sheet. Since `onFocus` and `onBlur` will be bubbled up to the menu\n  // widget each time a new MenuItem is focused, only disable the focused state\n  // if the blur event is fired without another focus event within an animation\n  // frame.\n  const [focused, setFocused] = useState(false);\n  const blurredFrame = useRef(0);\n  useOnUnmount(() => {\n    window.cancelAnimationFrame(blurredFrame.current);\n  });\n\n  return (\n    <Sheet\n      id={`${id}-sheet`}\n      {...props}\n      onRequestClose={onRequestClose}\n      overlayProps={{\n        ...overlayProps,\n        onClick: (event) => {\n          overlayProps?.onClick?.(event);\n\n          // prevent closing parent menus if the overlay element is clicked.\n          event.stopPropagation();\n          onRequestClose();\n        },\n      }}\n      position={position}\n      verticalSize={verticalSize}\n      onClick={(event) => {\n        onClick?.(event);\n\n        // Prevent closing parent sheet/menus if an element in the header or\n        // footer is clicked\n        if (\n          !(event.target instanceof HTMLElement) ||\n          !listRef.current?.contains(event.target)\n        ) {\n          event.stopPropagation();\n        }\n      }}\n    >\n      {header}\n      <MenuKeyboardFocusProvider horizontal={horizontal}>\n        <MenuWidget\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy as string}\n          id={id}\n          ref={menuRef}\n          tabIndex={focused ? -1 : 0}\n          {...menuProps}\n          onFocus={(event) => {\n            menuProps?.onFocus?.(event);\n            window.cancelAnimationFrame(blurredFrame.current);\n            setFocused(true);\n          }}\n          onBlur={(event) => {\n            menuProps?.onBlur?.(event);\n            blurredFrame.current = window.requestAnimationFrame(() => {\n              setFocused(false);\n            });\n          }}\n          onKeyDown={(event) => {\n            // the tab keypress should use the sheet's behavior instead of\n            // closing the menus\n            if (event.key === \"Tab\") {\n              return;\n            }\n            menuProps?.onKeyDown?.(event);\n          }}\n          disableElevation\n        >\n          <List\n            {...listProps}\n            style={listStyle ?? listProps?.style}\n            className={listClassName ?? listProps?.className}\n            ref={listRef}\n            horizontal={horizontal}\n            onClick={(event) => {\n              listProps?.onClick?.(event);\n\n              // this makes it so you can click on the menu/list without\n              // closing the menu\n              if (event.target === event.currentTarget) {\n                event.stopPropagation();\n              }\n            }}\n          >\n            {children}\n          </List>\n        </MenuWidget>\n      </MenuKeyboardFocusProvider>\n      {footer}\n    </Sheet>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}