{"ast":null,"code":"/**\n * This is a simple wrapper to get the view width or view height.\n *\n * @param direction - Either the \"height\" or \"width\" string to get that\n * dimension\n * @returns the view width or view height.\n */\nexport function getViewportSize(direction) {\n  var de = document.documentElement || {\n    clientHeight: 0,\n    clientWidth: 0\n  };\n  if (direction === \"width\") {\n    return window.innerWidth || de.clientWidth;\n  }\n  return window.innerHeight || de.clientHeight;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;AAOA,OAAM,SAAUA,eAAe,CAACC,SAA6B;EAC3D,IAAMC,EAAE,GAAGC,QAAQ,CAACC,eAAe,IAAI;IAAEC,YAAY,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAC,CAAE;EAE1E,IAAIL,SAAS,KAAK,OAAO,EAAE;IACzB,OAAOM,MAAM,CAACC,UAAU,IAAIN,EAAE,CAACI,WAAW;;EAG5C,OAAOC,MAAM,CAACE,WAAW,IAAIP,EAAE,CAACG,YAAY;AAC9C","names":["getViewportSize","direction","de","document","documentElement","clientHeight","clientWidth","window","innerWidth","innerHeight"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/positioning/getViewportSize.ts"],"sourcesContent":["/**\n * This is a simple wrapper to get the view width or view height.\n *\n * @param direction - Either the \"height\" or \"width\" string to get that\n * dimension\n * @returns the view width or view height.\n */\nexport function getViewportSize(direction: \"height\" | \"width\"): number {\n  const de = document.documentElement || { clientHeight: 0, clientWidth: 0 };\n\n  if (direction === \"width\") {\n    return window.innerWidth || de.clientWidth;\n  }\n\n  return window.innerHeight || de.clientHeight;\n}\n"]},"metadata":{},"sourceType":"module"}