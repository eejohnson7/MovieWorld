{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useState } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { useKeyboardFocus } from \"@react-md/utils\";\nimport { useMenuBarContext } from \"./MenuBarProvider\";\n/**\n * This context is used to implement the \"roving tab index\" behavior\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\nvar context = createContext(\"\");\ncontext.displayName = \"MenuBarWidgetFocusId\";\nvar Provider = context.Provider;\n/** @remarks \\@since 5.0.0 */\nexport function useMenuBarWidgetFocusId() {\n  return useContext(context);\n}\n/**\n * This component implements the keyboard focus behavior for the `MenuBar`\n * component and probably shouldn't be used externally.\n *\n * @remarks \\@since 5.0.0\n */\nexport function MenuBarWidget(_a) {\n  var children = _a.children,\n    tabIndex = _a.tabIndex,\n    propOnFocus = _a.onFocus,\n    propOnKeyDown = _a.onKeyDown,\n    props = __rest(_a, [\"children\", \"tabIndex\", \"onFocus\", \"onKeyDown\"]);\n  var setActiveId = useMenuBarContext().setActiveId;\n  var _b = __read(useState(\"\"), 2),\n    focusId = _b[0],\n    setFocusId = _b[1];\n  var _c = useKeyboardFocus({\n      onFocus: propOnFocus,\n      onKeyDown: propOnKeyDown,\n      onFocusChange: function (element) {\n        element.focus();\n        setFocusId(element.id);\n        setActiveId(function (prevActiveId) {\n          return prevActiveId ? element.id : \"\";\n        });\n      }\n    }),\n    onFocus = _c.onFocus,\n    onKeyDown = _c.onKeyDown;\n  return _jsx(Provider, __assign({\n    value: focusId\n  }, {\n    children: _jsx(List, __assign({}, props, {\n      role: \"menubar\",\n      horizontal: true,\n      tabIndex: tabIndex !== null && tabIndex !== void 0 ? tabIndex : focusId ? -1 : 0,\n      onFocus: onFocus,\n      onKeyDown: onKeyDown\n    }, {\n      children: children\n    }))\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE3D,SAASC,IAAI,QAAQ,gBAAgB;AAErC,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,SAASC,iBAAiB,QAAQ,mBAAmB;AAErD;;;;;;AAMA,IAAMC,OAAO,GAAGN,aAAa,CAAC,EAAE,CAAC;AACjCM,OAAO,CAACC,WAAW,GAAG,sBAAsB;AACpC,YAAQ,GAAKD,OAAO,SAAZ;AAEhB;AACA,OAAM,SAAUE,uBAAuB;EACrC,OAAOP,UAAU,CAACK,OAAO,CAAC;AAC5B;AAQA;;;;;;AAMA,OAAM,SAAUG,aAAa,CAACC,EAMT;EALnB,YAAQ;IACRC,QAAQ;IACCC,WAAW;IACTC,aAAa;IACrBC,KAAK,cALoB,gDAM7B,CADS;EAEA,eAAW,GAAKT,iBAAiB,EAAE,YAAxB;EACb,gBAAwBH,QAAQ,CAAC,EAAE,CAAC;IAAnCa,OAAO;IAAEC,UAAU,QAAgB;EACpC,SAAyBZ,gBAAgB,CAAC;MAC9Ca,OAAO,EAAEL,WAAW;MACpBM,SAAS,EAAEL,aAAa;MACxBM,aAAa,YAACC,OAAO;QACnBA,OAAO,CAACC,KAAK,EAAE;QACfL,UAAU,CAACI,OAAO,CAACE,EAAE,CAAC;QACtBC,WAAW,CAAC,UAACC,YAAY;UAAK,OAACA,YAAY,GAAGJ,OAAO,CAACE,EAAE,GAAG,EAAE;QAA/B,CAAgC,CAAC;MACjE;KACD,CAAC;IARML,OAAO;IAAEC,SAAS,eAQxB;EAEF,OACEO,KAACC,QAAQ;IAACC,KAAK,EAAEZ;EAAO;IAAAa,UACtBH,KAACtB,IAAI,eACCW,KAAK;MACTe,IAAI,EAAC,SAAS;MACdC,UAAU;MACVnB,QAAQ,EAAEA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAKI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAE;MACxCE,OAAO,EAAEA,OAAO;MAChBC,SAAS,EAAEA;IAAS;MAAAU,UAEnBA;IAAQ;EACJ,GACE;AAEf","names":["createContext","useContext","useState","List","useKeyboardFocus","useMenuBarContext","context","displayName","useMenuBarWidgetFocusId","MenuBarWidget","_a","tabIndex","propOnFocus","propOnKeyDown","props","focusId","setFocusId","onFocus","onKeyDown","onFocusChange","element","focus","id","setActiveId","prevActiveId","_jsx","Provider","value","children","role","horizontal"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/MenuBarWidget.tsx"],"sourcesContent":["import type { ReactElement } from \"react\";\nimport { createContext, useContext, useState } from \"react\";\nimport type { ListProps } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\nimport { useKeyboardFocus } from \"@react-md/utils\";\n\nimport { useMenuBarContext } from \"./MenuBarProvider\";\n\n/**\n * This context is used to implement the \"roving tab index\" behavior\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\nconst context = createContext(\"\");\ncontext.displayName = \"MenuBarWidgetFocusId\";\nconst { Provider } = context;\n\n/** @remarks \\@since 5.0.0 */\nexport function useMenuBarWidgetFocusId(): string {\n  return useContext(context);\n}\n\n/** @remarks \\@since 5.0.0 */\nexport type BaseMenuBarWidgetProps = Omit<ListProps, \"role\" | \"horizontal\">;\n\n/** @remarks \\@since 5.0.0 */\nexport type MenuBarWidgetProps = LabelRequiredForA11y<BaseMenuBarWidgetProps>;\n\n/**\n * This component implements the keyboard focus behavior for the `MenuBar`\n * component and probably shouldn't be used externally.\n *\n * @remarks \\@since 5.0.0\n */\nexport function MenuBarWidget({\n  children,\n  tabIndex,\n  onFocus: propOnFocus,\n  onKeyDown: propOnKeyDown,\n  ...props\n}: MenuBarWidgetProps): ReactElement {\n  const { setActiveId } = useMenuBarContext();\n  const [focusId, setFocusId] = useState(\"\");\n  const { onFocus, onKeyDown } = useKeyboardFocus({\n    onFocus: propOnFocus,\n    onKeyDown: propOnKeyDown,\n    onFocusChange(element) {\n      element.focus();\n      setFocusId(element.id);\n      setActiveId((prevActiveId) => (prevActiveId ? element.id : \"\"));\n    },\n  });\n\n  return (\n    <Provider value={focusId}>\n      <List\n        {...props}\n        role=\"menubar\"\n        horizontal\n        tabIndex={tabIndex ?? (focusId ? -1 : 0)}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n      >\n        {children}\n      </List>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}