{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { IconRotator, TextIconSpacing, useIcon } from \"@react-md/icon\";\n/**\n * This is just an internal component that handles rendering the button for a\n * `DropdownMenu` with a conditional dropdown icon.\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport var MenuButton = forwardRef(function MenuButton(_a, ref) {\n  var propIcon = _a.icon,\n    _b = _a.iconAfter,\n    iconAfter = _b === void 0 ? true : _b,\n    iconRotatorProps = _a.iconRotatorProps,\n    textIconSpacingProps = _a.textIconSpacingProps,\n    floating = _a.floating,\n    _c = _a.theme,\n    theme = _c === void 0 ? floating ? \"secondary\" : \"clear\" : _c,\n    _d = _a.themeType,\n    themeType = _d === void 0 ? floating ? \"contained\" : \"flat\" : _d,\n    _e = _a.buttonType,\n    buttonType = _e === void 0 ? floating ? \"icon\" : \"text\" : _e,\n    _f = _a.disableDropdownIcon,\n    disableDropdownIcon = _f === void 0 ? buttonType === \"icon\" : _f,\n    children = _a.children,\n    visible = _a.visible,\n    props = __rest(_a, [\"icon\", \"iconAfter\", \"iconRotatorProps\", \"textIconSpacingProps\", \"floating\", \"theme\", \"themeType\", \"buttonType\", \"disableDropdownIcon\", \"children\", \"visible\"]);\n  var dropdownIcon = useIcon(\"dropdown\", propIcon);\n  var icon = propIcon;\n  if (!disableDropdownIcon) {\n    icon = _jsx(IconRotator, __assign({}, iconRotatorProps, {\n      rotated: visible\n    }, {\n      children: dropdownIcon\n    }));\n  }\n  return _jsx(Button, __assign({}, props, {\n    ref: ref,\n    theme: theme,\n    themeType: themeType,\n    buttonType: buttonType,\n    floating: floating\n  }, {\n    children: _jsx(TextIconSpacing, __assign({\n      icon: icon,\n      iconAfter: iconAfter\n    }, textIconSpacingProps, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,gBAAgB;AAiBtE;;;;;;;AAOA,OAAO,IAAMC,UAAU,GAAGL,UAAU,CAClC,SAASK,UAAU,CACjBC,EAaC,EACDC,GAAG;EAbD,IAAMC,QAAQ;IACdC,iBAAgB;IAAhBC,SAAS,mBAAG,IAAI;IAChBC,gBAAgB;IAChBC,oBAAoB;IACpBC,QAAQ;IACRC,aAAwC;IAAxCC,KAAK,mBAAGF,QAAQ,GAAG,WAAW,GAAG,OAAO;IACxCG,iBAA2C;IAA3CC,SAAS,mBAAGJ,QAAQ,GAAG,WAAW,GAAG,MAAM;IAC3CK,kBAAuC;IAAvCC,UAAU,mBAAGN,QAAQ,GAAG,MAAM,GAAG,MAAM;IACvCO,2BAA2C;IAA3CC,mBAAmB,mBAAGF,UAAU,KAAK,MAAM;IAC3CG,QAAQ;IACRC,OAAO;IACJC,KAAK,cAZV,+JAaC,CADS;EAIV,IAAMC,YAAY,GAAGrB,OAAO,CAAC,UAAU,EAAEI,QAAQ,CAAC;EAClD,IAAIkB,IAAI,GAAGlB,QAAQ;EACnB,IAAI,CAACa,mBAAmB,EAAE;IACxBK,IAAI,GACFC,KAACzB,WAAW,eAAKS,gBAAgB;MAAEiB,OAAO,EAAEL;IAAO;MAAAD,UAChDG;IAAY,GAEhB;;EAGH,OACEE,KAAC1B,MAAM,eACDuB,KAAK;IACTjB,GAAG,EAAEA,GAAG;IACRQ,KAAK,EAAEA,KAAK;IACZE,SAAS,EAAEA,SAAS;IACpBE,UAAU,EAAEA,UAAU;IACtBN,QAAQ,EAAEA;EAAQ;IAAAS,UAElBK,KAACxB,eAAe;MACduB,IAAI,EAAEA,IAAI;MACVhB,SAAS,EAAEA;IAAS,GAChBE,oBAAoB;MAAAU,UAEvBA;IAAQ;EACO,GACX;AAEb,CAAC,CACF","names":["forwardRef","Button","IconRotator","TextIconSpacing","useIcon","MenuButton","_a","ref","propIcon","_b","iconAfter","iconRotatorProps","textIconSpacingProps","floating","_c","theme","_d","themeType","_e","buttonType","_f","disableDropdownIcon","children","visible","props","dropdownIcon","icon","_jsx","rotated"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/MenuButton.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { IconRotator, TextIconSpacing, useIcon } from \"@react-md/icon\";\n\nimport type { BaseMenuButtonProps } from \"./types\";\n\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport interface MenuButtonProps extends BaseMenuButtonProps {\n  /**\n   * Boolean if the menu is currently visible which will rotate the dropdown\n   * icon when the {@link BaseMenuButtonProps.disableDropdownIcon} is not\n   * `true`.\n   */\n  visible: boolean;\n}\n\n/**\n * This is just an internal component that handles rendering the button for a\n * `DropdownMenu` with a conditional dropdown icon.\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\nexport const MenuButton = forwardRef<HTMLButtonElement, MenuButtonProps>(\n  function MenuButton(\n    {\n      icon: propIcon,\n      iconAfter = true,\n      iconRotatorProps,\n      textIconSpacingProps,\n      floating,\n      theme = floating ? \"secondary\" : \"clear\",\n      themeType = floating ? \"contained\" : \"flat\",\n      buttonType = floating ? \"icon\" : \"text\",\n      disableDropdownIcon = buttonType === \"icon\",\n      children,\n      visible,\n      ...props\n    },\n    ref\n  ) {\n    const dropdownIcon = useIcon(\"dropdown\", propIcon);\n    let icon = propIcon;\n    if (!disableDropdownIcon) {\n      icon = (\n        <IconRotator {...iconRotatorProps} rotated={visible}>\n          {dropdownIcon}\n        </IconRotator>\n      );\n    }\n\n    return (\n      <Button\n        {...props}\n        ref={ref}\n        theme={theme}\n        themeType={themeType}\n        buttonType={buttonType}\n        floating={floating}\n      >\n        <TextIconSpacing\n          icon={icon}\n          iconAfter={iconAfter}\n          {...textIconSpacingProps}\n        >\n          {children}\n        </TextIconSpacing>\n      </Button>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}