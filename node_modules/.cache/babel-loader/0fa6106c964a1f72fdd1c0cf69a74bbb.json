{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-list-item\");\n/**\n * This component us used to create the one to three lines of text within a\n * `ListItem` or `SimpleListItem`.\n */\nexport function ListItemText(_a) {\n  var className = _a.className,\n    secondaryTextClassName = _a.secondaryTextClassName,\n    secondaryText = _a.secondaryText,\n    children = _a.children;\n  var secondaryContent;\n  if (secondaryText) {\n    secondaryContent = _jsx(\"span\", __assign({\n      className: cn(block(\"text\", {\n        secondary: true\n      }), secondaryTextClassName)\n    }, {\n      children: secondaryText\n    }));\n  }\n  return _jsxs(\"span\", __assign({\n    className: cn(block(\"text\"), className)\n  }, {\n    children: [children, secondaryContent]\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;AACA,OAAOA,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AA4BrC,IAAMC,KAAK,GAAGD,GAAG,CAAC,eAAe,CAAC;AAElC;;;;AAIA,OAAM,SAAUE,YAAY,CAACC,EAKT;MAJlBC,SAAS;IACTC,sBAAsB;IACtBC,aAAa;IACbC,QAAQ;EAER,IAAIC,gBAA2B;EAC/B,IAAIF,aAAa,EAAE;IACjBE,gBAAgB,GACdC;MACEL,SAAS,EAAEL,EAAE,CACXE,KAAK,CAAC,MAAM,EAAE;QAAES,SAAS,EAAE;MAAI,CAAE,CAAC,EAClCL,sBAAsB;IACvB;MAAAE,UAEAD;IAAa,GAEjB;;EAGH,OACEK;IAAMP,SAAS,EAAEL,EAAE,CAACE,KAAK,CAAC,MAAM,CAAC,EAAEG,SAAS;EAAC;IAAAG,WAC1CA,QAAQ,EACRC,gBAAgB;EAAA,GACZ;AAEX","names":["cn","bem","block","ListItemText","_a","className","secondaryTextClassName","secondaryText","children","secondaryContent","_jsx","secondary","_jsxs"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/list/src/ListItemText.tsx"],"sourcesContent":["import type { ReactElement, ReactNode } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport interface ListItemTextProps {\n  /**\n   * An optional `className` to apply to the `<span>` surrounding the `children`.\n   */\n  className?: string;\n\n  /**\n   * An optional `className` to apply to the `<span>` surrounding the\n   * `secondaryText` if it was provided.\n   */\n  secondaryTextClassName?: string;\n\n  /**\n   * The main text children to display. This will be stacked above the\n   * `secondaryText` if it was provided.\n   */\n  children?: ReactNode;\n\n  /**\n   * Optional secondary text to display that will be stacked below the\n   * `children`. This also applies some styles to make the text less prominent\n   * than the `children`.\n   */\n  secondaryText?: ReactNode;\n}\n\nconst block = bem(\"rmd-list-item\");\n\n/**\n * This component us used to create the one to three lines of text within a\n * `ListItem` or `SimpleListItem`.\n */\nexport function ListItemText({\n  className,\n  secondaryTextClassName,\n  secondaryText,\n  children,\n}: ListItemTextProps): ReactElement {\n  let secondaryContent: ReactNode;\n  if (secondaryText) {\n    secondaryContent = (\n      <span\n        className={cn(\n          block(\"text\", { secondary: true }),\n          secondaryTextClassName\n        )}\n      >\n        {secondaryText}\n      </span>\n    );\n  }\n\n  return (\n    <span className={cn(block(\"text\"), className)}>\n      {children}\n      {secondaryContent}\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}