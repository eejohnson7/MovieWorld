{"ast":null,"code":"import { createContext, useContext } from \"react\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nvar noop = function () {\n  if (process.env.NODE_ENV !== \"production\") {\n    throw new Error(\"KeyboardMovementProvider must be a parent component.\");\n  }\n};\n/**\n * Most custom keyboard functionality use these keys.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport var DEFAULT_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowDown\"],\n  decrementKeys: [\"ArrowUp\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport var DEFAULT_LTR_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowRight\"],\n  decrementKeys: [\"ArrowLeft\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport var DEFAULT_RTL_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowLeft\"],\n  decrementKeys: [\"ArrowRight\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nvar context = createContext({\n  attach: noop,\n  detach: noop,\n  watching: {\n    current: []\n  },\n  loopable: false,\n  searchable: false,\n  horizontal: false,\n  includeDisabled: false,\n  config: {\n    current: DEFAULT_KEYBOARD_MOVEMENT\n  }\n});\ncontext.displayName = \"KeyboardMovement\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport var KeyboardMovementContextProvider = context.Provider;\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function useKeyboardFocusContext() {\n  return useContext(context);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAIjD;;;;AAIA,IAAMC,IAAI,GAAG;EACX,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;;AAE3E,CAAC;AAED;;;;;;AAMA,OAAO,IAAMC,yBAAyB,GAAqC;EACzEC,aAAa,EAAE,CAAC,WAAW,CAAC;EAC5BC,aAAa,EAAE,CAAC,SAAS,CAAC;EAC1BC,eAAe,EAAE,CAAC,MAAM,CAAC;EACzBC,cAAc,EAAE,CAAC,KAAK;CACvB;AAED;;;;AAIA,OAAO,IAAMC,6BAA6B,GAAqC;EAC7EJ,aAAa,EAAE,CAAC,YAAY,CAAC;EAC7BC,aAAa,EAAE,CAAC,WAAW,CAAC;EAC5BC,eAAe,EAAE,CAAC,MAAM,CAAC;EACzBC,cAAc,EAAE,CAAC,KAAK;CACvB;AAED;;;;AAIA,OAAO,IAAME,6BAA6B,GAAqC;EAC7EL,aAAa,EAAE,CAAC,WAAW,CAAC;EAC5BC,aAAa,EAAE,CAAC,YAAY,CAAC;EAC7BC,eAAe,EAAE,CAAC,MAAM,CAAC;EACzBC,cAAc,EAAE,CAAC,KAAK;CACvB;AAED;;;;AAIA,IAAMG,OAAO,GAAGd,aAAa,CAAuB;EAClDe,MAAM,EAAEb,IAAI;EACZc,MAAM,EAAEd,IAAI;EACZe,QAAQ,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAE;EACzBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,eAAe,EAAE,KAAK;EACtBC,MAAM,EAAE;IAAEL,OAAO,EAAEX;EAAyB;CAC7C,CAAC;AACFO,OAAO,CAACU,WAAW,GAAG,kBAAkB;AAExC;;;;AAIA,OAAe,IAAUC,+BAA+B,GAAKX,OAAO,SAAZ;AAExD;;;;AAIA,OAAM,SAAUY,uBAAuB;EACrC,OAAOzB,UAAU,CAACa,OAAO,CAAC;AAC5B","names":["createContext","useContext","noop","process","env","NODE_ENV","Error","DEFAULT_KEYBOARD_MOVEMENT","incrementKeys","decrementKeys","jumpToFirstKeys","jumpToLastKeys","DEFAULT_LTR_KEYBOARD_MOVEMENT","DEFAULT_RTL_KEYBOARD_MOVEMENT","context","attach","detach","watching","current","loopable","searchable","horizontal","includeDisabled","config","displayName","KeyboardMovementContextProvider","useKeyboardFocusContext"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/keyboardMovement/movementContext.ts"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nimport type { KeyboardFocusContext, KeyboardMovementConfig } from \"./types\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nconst noop = (): void => {\n  if (process.env.NODE_ENV !== \"production\") {\n    throw new Error(\"KeyboardMovementProvider must be a parent component.\");\n  }\n};\n\n/**\n * Most custom keyboard functionality use these keys.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const DEFAULT_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowDown\"],\n  decrementKeys: [\"ArrowUp\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport const DEFAULT_LTR_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowRight\"],\n  decrementKeys: [\"ArrowLeft\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport const DEFAULT_RTL_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowLeft\"],\n  decrementKeys: [\"ArrowRight\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nconst context = createContext<KeyboardFocusContext>({\n  attach: noop,\n  detach: noop,\n  watching: { current: [] },\n  loopable: false,\n  searchable: false,\n  horizontal: false,\n  includeDisabled: false,\n  config: { current: DEFAULT_KEYBOARD_MOVEMENT },\n});\ncontext.displayName = \"KeyboardMovement\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const { Provider: KeyboardMovementContextProvider } = context;\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function useKeyboardFocusContext(): Readonly<KeyboardFocusContext> {\n  return useContext(context);\n}\n"]},"metadata":{},"sourceType":"module"}