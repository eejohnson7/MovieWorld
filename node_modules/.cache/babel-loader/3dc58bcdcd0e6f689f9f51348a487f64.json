{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a checkbox and pulling the checkbox icon from the\n * {@link IconProvider}.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemCheckbox } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemCheckbox\n *         id=\"checkbox-1\"\n *         checked={checked}\n *         onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *       >\n *         Checkbox\n *      </MenuItemCheckbox>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n */\nexport var MenuItemCheckbox = forwardRef(function MenuItemCheckbox(_a, ref) {\n  var propIcon = _a.icon,\n    props = __rest(_a, [\"icon\"]);\n  var icon = useIcon(\"checkbox\", propIcon);\n  return _jsx(MenuItemInputToggle, __assign({}, props, {\n    ref: ref,\n    icon: icon,\n    type: \"checkbox\"\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AAIxC,SAASC,mBAAmB,QAAQ,uBAAuB;AAO3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAO,IAAMC,gBAAgB,GAAGH,UAAU,CAGxC,SAASG,gBAAgB,CAACC,EAA4B,EAAEC,GAAG;EAA/B,IAAMC,QAAQ;IAAKC,KAAK,cAA1B,QAA4B,CAAF;EACpD,IAAMC,IAAI,GAAGP,OAAO,CAAC,UAAU,EAAEK,QAAQ,CAAC;EAC1C,OACEG,KAACP,mBAAmB,eAAKK,KAAK;IAAEF,GAAG,EAAEA,GAAG;IAAEG,IAAI,EAAEA,IAAI;IAAEE,IAAI,EAAC;EAAU,GAAG;AAE5E,CAAC,CAAC","names":["forwardRef","useIcon","MenuItemInputToggle","MenuItemCheckbox","_a","ref","propIcon","props","icon","_jsx","type"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/menu/MenuItemCheckbox.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\n\nimport type { IndeterminateCheckboxProps } from \"../toggle/Checkbox\";\nimport type { BaseMenuItemInputToggleProps } from \"./MenuItemInputToggle\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n\n/** @remarks \\@since 2.8.0 */\nexport interface MenuItemCheckboxProps\n  extends BaseMenuItemInputToggleProps,\n    IndeterminateCheckboxProps {}\n\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a checkbox and pulling the checkbox icon from the\n * {@link IconProvider}.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemCheckbox } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemCheckbox\n *         id=\"checkbox-1\"\n *         checked={checked}\n *         onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *       >\n *         Checkbox\n *      </MenuItemCheckbox>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n */\nexport const MenuItemCheckbox = forwardRef<\n  HTMLLIElement,\n  MenuItemCheckboxProps\n>(function MenuItemCheckbox({ icon: propIcon, ...props }, ref) {\n  const icon = useIcon(\"checkbox\", propIcon);\n  return (\n    <MenuItemInputToggle {...props} ref={ref} icon={icon} type=\"checkbox\" />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}