{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { AppBarTitle } from \"@react-md/app-bar\";\nimport { bem } from \"@react-md/utils\";\nimport { useLayoutConfig } from \"./LayoutProvider\";\nimport { isFullHeightLayout } from \"./utils\";\nvar styles = bem(\"rmd-layout-title\");\n/**\n * An extremely simple wrapper for the `AppBarTitle` that will automatically\n * apply an `id` and apply the correct margin for full-height layouts.\n */\nexport var LayoutAppBarTitle = forwardRef(function LayoutAppBarTitle(_a, ref) {\n  var propId = _a.id,\n    className = _a.className,\n    children = _a.children,\n    props = __rest(_a, [\"id\", \"className\", \"children\"]);\n  var _b = useLayoutConfig(),\n    baseId = _b.baseId,\n    layout = _b.layout;\n  var id = propId !== null && propId !== void 0 ? propId : \"\".concat(baseId, \"-title\");\n  return _jsx(AppBarTitle, __assign({}, props, {\n    id: id,\n    ref: ref,\n    className: cn(styles({\n      offset: isFullHeightLayout(layout)\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAE3B,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,GAAG,QAAQ,iBAAiB;AAErC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,kBAAkB,QAAQ,SAAS;AAI5C,IAAMC,MAAM,GAAGH,GAAG,CAAC,kBAAkB,CAAC;AAEtC;;;;AAIA,OAAO,IAAMI,iBAAiB,GAAGP,UAAU,CAGzC,SAASO,iBAAiB,CAC1BC,EAA6C,EAC7CC,GAAG;EADD,IAAIC,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAKC,KAAK,cAA3C,+BAA6C,CAAF;EAGrC,SAAqBT,eAAe,EAAE;IAApCU,MAAM;IAAEC,MAAM,YAAsB;EAC5C,IAAMC,EAAE,GAAGN,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,UAAGI,MAAM,WAAQ;EACtC,OACEG,KAACf,WAAW,eACNW,KAAK;IACTG,EAAE,EAAEA,EAAE;IACNP,GAAG,EAAEA,GAAG;IACRE,SAAS,EAAEV,EAAE,CAACK,MAAM,CAAC;MAAEY,MAAM,EAAEb,kBAAkB,CAACU,MAAM;IAAC,CAAE,CAAC,EAAEJ,SAAS;EAAC;IAAAC,UAEvEA;EAAQ,GACG;AAElB,CAAC,CAAC","names":["forwardRef","cn","AppBarTitle","bem","useLayoutConfig","isFullHeightLayout","styles","LayoutAppBarTitle","_a","ref","propId","className","children","props","baseId","layout","id","_jsx","offset"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/layout/src/LayoutAppBarTitle.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { AppBarTitleProps } from \"@react-md/app-bar\";\nimport { AppBarTitle } from \"@react-md/app-bar\";\nimport { bem } from \"@react-md/utils\";\n\nimport { useLayoutConfig } from \"./LayoutProvider\";\nimport { isFullHeightLayout } from \"./utils\";\n\nexport type LayoutAppBarTitleProps = AppBarTitleProps;\n\nconst styles = bem(\"rmd-layout-title\");\n\n/**\n * An extremely simple wrapper for the `AppBarTitle` that will automatically\n * apply an `id` and apply the correct margin for full-height layouts.\n */\nexport const LayoutAppBarTitle = forwardRef<\n  HTMLDivElement,\n  LayoutAppBarTitleProps\n>(function LayoutAppBarTitle(\n  { id: propId, className, children, ...props },\n  ref\n) {\n  const { baseId, layout } = useLayoutConfig();\n  const id = propId ?? `${baseId}-title`;\n  return (\n    <AppBarTitle\n      {...props}\n      id={id}\n      ref={ref}\n      className={cn(styles({ offset: isFullHeightLayout(layout) }), className)}\n    >\n      {children}\n    </AppBarTitle>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}