{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ListItem } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n/**\n * This component is used as an \"action\" within a `Menu`/`DropdownMenu` that\n * implements some keyboard focus behavior. This component should generally have\n * an `onClick` event handler.\n *\n * @remarks \\@since 5.0.0\n */\nexport var MenuItem = forwardRef(function MenuItem(_a, nodeRef) {\n  var className = _a.className,\n    children = _a.children,\n    _b = _a.role,\n    role = _b === void 0 ? \"menuitem\" : _b,\n    _c = _a.tabIndex,\n    tabIndex = _c === void 0 ? -1 : _c,\n    props = __rest(_a, [\"className\", \"children\", \"role\", \"tabIndex\"]);\n  var ref = useKeyboardFocusableElement(nodeRef);\n  return _jsx(ListItem, __assign({}, props, {\n    ref: ref,\n    role: role,\n    tabIndex: tabIndex,\n    className: cn(\"rmd-menu-item\", className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,2BAA2B,QAAQ,iBAAiB;AAI7D;;;;;;;AAOA,OAAO,IAAMC,QAAQ,GAAGJ,UAAU,CAChC,SAASI,QAAQ,CACfC,EAAmE,EACnEC,OAAO;EADL,aAAS;IAAEC,QAAQ;IAAEC,YAAiB;IAAjBC,IAAI,mBAAG,UAAU;IAAEC,gBAAa;IAAbC,QAAQ,mBAAG,CAAC,CAAC;IAAKC,KAAK,cAAjE,6CAAmE,CAAF;EAGjE,IAAMC,GAAG,GAAGV,2BAA2B,CAACG,OAAO,CAAC;EAChD,OACEQ,KAACZ,QAAQ,eACHU,KAAK;IACTC,GAAG,EAAEA,GAAG;IACRJ,IAAI,EAAEA,IAAI;IACVE,QAAQ,EAAEA,QAAQ;IAClBI,SAAS,EAAEd,EAAE,CAAC,eAAe,EAAEc,SAAS;EAAC;IAAAR,UAExCA;EAAQ,GACA;AAEf,CAAC,CACF","names":["forwardRef","cn","ListItem","useKeyboardFocusableElement","MenuItem","_a","nodeRef","children","_b","role","_c","tabIndex","props","ref","_jsx","className"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/MenuItem.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ListItem } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n\nimport type { MenuItemProps } from \"./types\";\n\n/**\n * This component is used as an \"action\" within a `Menu`/`DropdownMenu` that\n * implements some keyboard focus behavior. This component should generally have\n * an `onClick` event handler.\n *\n * @remarks \\@since 5.0.0\n */\nexport const MenuItem = forwardRef<HTMLLIElement, MenuItemProps>(\n  function MenuItem(\n    { className, children, role = \"menuitem\", tabIndex = -1, ...props },\n    nodeRef\n  ) {\n    const ref = useKeyboardFocusableElement(nodeRef);\n    return (\n      <ListItem\n        {...props}\n        ref={ref}\n        role={role}\n        tabIndex={tabIndex}\n        className={cn(\"rmd-menu-item\", className)}\n      >\n        {children}\n      </ListItem>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}