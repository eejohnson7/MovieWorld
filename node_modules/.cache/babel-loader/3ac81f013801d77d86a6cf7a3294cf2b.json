{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar styles = bem(\"rmd-toggle\");\n/**\n * @remarks \\@since 2.8.0\n */\nexport var InputToggleIcon = forwardRef(function InputToggleIcon(_a, ref) {\n  var _b = _a.circle,\n    circle = _b === void 0 ? false : _b,\n    _c = _a.disabled,\n    disabled = _c === void 0 ? false : _c,\n    _d = _a.overlay,\n    overlay = _d === void 0 ? false : _d,\n    _e = _a.checked,\n    checked = _e === void 0 ? false : _e,\n    _f = _a.indeterminate,\n    indeterminate = _f === void 0 ? false : _f,\n    className = _a.className,\n    children = _a.children,\n    props = __rest(_a, [\"circle\", \"disabled\", \"overlay\", \"checked\", \"indeterminate\", \"className\", \"children\"]);\n  return _jsx(\"span\", __assign({}, props, {\n    ref: ref,\n    className: cn(styles(\"icon\", {\n      circle: circle,\n      disabled: disabled,\n      overlay: overlay,\n      checked: !indeterminate && checked,\n      indeterminate: indeterminate,\n      \"indeterminate-checked\": checked && indeterminate\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AAiCrC,IAAMC,MAAM,GAAGD,GAAG,CAAC,YAAY,CAAC;AAEhC;;;AAGA,OAAO,IAAME,eAAe,GAAGJ,UAAU,CAGvC,SAASI,eAAe,CACxBC,EASuB,EACvBC,GAAG;EATD,kBAAc;IAAdC,MAAM,mBAAG,KAAK;IACdC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;IAChBC,eAAe;IAAfC,OAAO,mBAAG,KAAK;IACfC,eAAe;IAAfC,OAAO,mBAAG,KAAK;IACfC,qBAAqB;IAArBC,aAAa,mBAAG,KAAK;IACrBC,SAAS;IACTC,QAAQ;IACLC,KAAK,cARV,sFASC,CADS;EAIV,OACEC,0BACMD,KAAK;IACTZ,GAAG,EAAEA,GAAG;IACRU,SAAS,EAAEf,EAAE,CACXE,MAAM,CAAC,MAAM,EAAE;MACbI,MAAM;MACNE,QAAQ;MACRE,OAAO;MACPE,OAAO,EAAE,CAACE,aAAa,IAAIF,OAAO;MAClCE,aAAa;MACb,uBAAuB,EAAEF,OAAO,IAAIE;KACrC,CAAC,EACFC,SAAS;EACV;IAAAC,UAEAA;EAAQ,GACJ;AAEX,CAAC,CAAC","names":["forwardRef","cn","bem","styles","InputToggleIcon","_a","ref","circle","_c","disabled","_d","overlay","_e","checked","_f","indeterminate","className","children","props","_jsx"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/toggle/InputToggleIcon.tsx"],"sourcesContent":["import type { HTMLAttributes, ReactElement } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\n/**\n * @remarks \\@since 2.8.0\n */\nexport interface InputToggleIconProps extends HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Boolean if the icon should use circle styles. This should normally be\n   * enabled for radio input types.\n   */\n  circle?: boolean;\n\n  /**\n   * Boolean if the disabled styles should be applied.\n   */\n  disabled?: boolean;\n\n  /**\n   * Boolean if using an overlay for the different icon states.\n   */\n  overlay?: boolean;\n\n  /**\n   * Boolean if the icon should gain the checked state.\n   */\n  checked?: boolean;\n\n  /**\n   * Boolean if using the indeterminate checkbox state.\n   */\n  indeterminate?: boolean;\n}\n\nconst styles = bem(\"rmd-toggle\");\n\n/**\n * @remarks \\@since 2.8.0\n */\nexport const InputToggleIcon = forwardRef<\n  HTMLSpanElement,\n  InputToggleIconProps\n>(function InputToggleIcon(\n  {\n    circle = false,\n    disabled = false,\n    overlay = false,\n    checked = false,\n    indeterminate = false,\n    className,\n    children,\n    ...props\n  }: InputToggleIconProps,\n  ref\n): ReactElement {\n  return (\n    <span\n      {...props}\n      ref={ref}\n      className={cn(\n        styles(\"icon\", {\n          circle,\n          disabled,\n          overlay,\n          checked: !indeterminate && checked,\n          indeterminate,\n          \"indeterminate-checked\": checked && indeterminate,\n        }),\n        className\n      )}\n    >\n      {children}\n    </span>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}