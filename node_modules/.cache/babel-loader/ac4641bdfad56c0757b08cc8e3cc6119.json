{"ast":null,"code":"import { useResizeListener } from \"./useResizeListener\";\n/**\n * This is a simple component that will attach a throttled resize event listener\n * when mounted, and detach when it unmounts.\n *\n * This component only works for entire app resize events. If you are looking\n * for specific element resize events, check out the `ResizeObserver` component\n * instead.\n */\nexport function ResizeListener(_a) {\n  var onResize = _a.onResize,\n    options = _a.options,\n    _b = _a.immediate,\n    immediate = _b === void 0 ? typeof window !== \"undefined\" : _b;\n  useResizeListener({\n    onResize: onResize,\n    options: options,\n    immediate: immediate,\n    enabled: true\n  });\n  return null;\n}","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,qBAAqB;AAIvD;;;;;;;;AAQA,OAAM,SAAUC,cAAc,CAACC,EAIT;MAHpBC,QAAQ;IACRC,OAAO;IACPC,iBAAyC;IAAzCC,SAAS,mBAAG,OAAOC,MAAM,KAAK,WAAW;EAEzCP,iBAAiB,CAAC;IAAEG,QAAQ;IAAEC,OAAO;IAAEE,SAAS;IAAEE,OAAO,EAAE;EAAI,CAAE,CAAC;EAClE,OAAO,IAAI;AACb","names":["useResizeListener","ResizeListener","_a","onResize","options","_b","immediate","window","enabled"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/sizing/ResizeListener.tsx"],"sourcesContent":["import type { ResizeListenerOptions } from \"./useResizeListener\";\nimport { useResizeListener } from \"./useResizeListener\";\n\nexport type ResizeListenerProps = Omit<ResizeListenerOptions, \"enabled\">;\n\n/**\n * This is a simple component that will attach a throttled resize event listener\n * when mounted, and detach when it unmounts.\n *\n * This component only works for entire app resize events. If you are looking\n * for specific element resize events, check out the `ResizeObserver` component\n * instead.\n */\nexport function ResizeListener({\n  onResize,\n  options,\n  immediate = typeof window !== \"undefined\",\n}: ResizeListenerProps): null {\n  useResizeListener({ onResize, options, immediate, enabled: true });\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}