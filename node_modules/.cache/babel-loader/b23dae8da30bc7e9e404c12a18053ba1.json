{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\n/**\n * The `MediaOverlay` component is used to create an overlay over specific media\n * items within the `MediaContainer` component. You will need to apply most of\n * your own styles as this is really just used for positioning.\n */\nexport var MediaOverlay = forwardRef(function MediaOverlay(_a, ref) {\n  var className = _a.className,\n    children = _a.children,\n    _b = _a.position,\n    position = _b === void 0 ? \"bottom\" : _b,\n    props = __rest(_a, [\"className\", \"children\", \"position\"]);\n  return _jsx(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(\"rmd-media-overlay rmd-media-overlay--\".concat(position), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAuB3B;;;;;AAKA,OAAO,IAAMC,YAAY,GAAGF,UAAU,CACpC,SAASE,YAAY,CACnBC,EAAsD,EACtDC,GAAG;EADD,aAAS;IAAEC,QAAQ;IAAEC,gBAAmB;IAAnBC,QAAQ,mBAAG,QAAQ;IAAKC,KAAK,cAApD,qCAAsD,CAAF;EAGpD,OACEC,yBACMD,KAAK;IACTJ,GAAG,EAAEA,GAAG;IACRM,SAAS,EAAET,EAAE,CACX,+CAAwCM,QAAQ,CAAE,EAClDG,SAAS;EACV;IAAAL,UAEAA;EAAQ,GACL;AAEV,CAAC,CACF","names":["forwardRef","cn","MediaOverlay","_a","ref","children","_b","position","props","_jsx","className"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/media/src/MediaOverlay.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\n\n/**\n * The overlay positions relative to the `MediaContainer` component.  Most of\n * the sizes are self-explanatory, but the `middle` position will be centered\n * vertically while `center` will be centered `horizontally`.\n */\nexport type MediaOverlayPosition =\n  | \"top\"\n  | \"right\"\n  | \"bottom\"\n  | \"left\"\n  | \"middle\"\n  | \"center\"\n  | \"absolute-center\";\n\nexport interface MediaOverlayProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The position of the overlay within the `MediaContainer`.\n   */\n  position?: MediaOverlayPosition;\n}\n\n/**\n * The `MediaOverlay` component is used to create an overlay over specific media\n * items within the `MediaContainer` component. You will need to apply most of\n * your own styles as this is really just used for positioning.\n */\nexport const MediaOverlay = forwardRef<HTMLDivElement, MediaOverlayProps>(\n  function MediaOverlay(\n    { className, children, position = \"bottom\", ...props },\n    ref\n  ) {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        className={cn(\n          `rmd-media-overlay rmd-media-overlay--${position}`,\n          className\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}