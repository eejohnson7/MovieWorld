{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-fieldset\");\n/**\n * This is a simple wrapper for the `<fieldset>` that defaults to removing\n * the default styles of a border, padding, and margin and having a screen-reader\n * visible only legend element for added accessibility.\n */\nexport var Fieldset = forwardRef(function Fieldset(_a, ref) {\n  var className = _a.className,\n    legend = _a.legend,\n    legendStyle = _a.legendStyle,\n    legendClassName = _a.legendClassName,\n    _b = _a.legendSROnly,\n    legendSROnly = _b === void 0 ? false : _b,\n    _c = _a.unstyled,\n    unstyled = _c === void 0 ? true : _c,\n    children = _a.children,\n    props = __rest(_a, [\"className\", \"legend\", \"legendStyle\", \"legendClassName\", \"legendSROnly\", \"unstyled\", \"children\"]);\n  return _jsxs(\"fieldset\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      unstyled: unstyled\n    }), className)\n  }, {\n    children: [_jsx(\"legend\", __assign({\n      style: legendStyle,\n      className: cn(block(\"legend\", {\n        \"sr-only\": legendSROnly\n      }), legendClassName)\n    }, {\n      children: legend\n    })), children]\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AAiCrC,IAAMC,KAAK,GAAGD,GAAG,CAAC,cAAc,CAAC;AAEjC;;;;;AAKA,OAAO,IAAME,QAAQ,GAAGJ,UAAU,CAChC,SAASI,QAAQ,CACfC,EASC,EACDC,GAAG;EATD,aAAS;IACTC,MAAM;IACNC,WAAW;IACXC,eAAe;IACfC,oBAAoB;IAApBC,YAAY,mBAAG,KAAK;IACpBC,gBAAe;IAAfC,QAAQ,mBAAG,IAAI;IACfC,QAAQ;IACLC,KAAK,cARV,iGASC,CADS;EAIV,OACEC,+BACMD,KAAK;IACTT,GAAG,EAAEA,GAAG;IACRW,SAAS,EAAEhB,EAAE,CAACE,KAAK,CAAC;MAAEU,QAAQ;IAAA,CAAE,CAAC,EAAEI,SAAS;EAAC;IAAAH,WAE7CI;MACEC,KAAK,EAAEX,WAAW;MAClBS,SAAS,EAAEhB,EAAE,CACXE,KAAK,CAAC,QAAQ,EAAE;QAAE,SAAS,EAAEQ;MAAY,CAAE,CAAC,EAC5CF,eAAe;IAChB;MAAAK,UAEAP;IAAM,GACA,EACRO,QAAQ;EAAA,GACA;AAEf,CAAC,CACF","names":["forwardRef","cn","bem","block","Fieldset","_a","ref","legend","legendStyle","legendClassName","_b","legendSROnly","_c","unstyled","children","props","_jsxs","className","_jsx","style"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/form/src/Fieldset.tsx"],"sourcesContent":["import type { CSSProperties, FieldsetHTMLAttributes, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport interface FieldsetProps\n  extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n  /**\n   * The legend to display. This is required since a fieldset loses most of its'\n   * benefit for accessibility without a legend.\n   */\n  legend: ReactNode;\n\n  /**\n   * An optional style to apply to the legend element.\n   */\n  legendStyle?: CSSProperties;\n\n  /**\n   * An optional classname to apply to the legend.\n   */\n  legendClassName?: string;\n\n  /**\n   * Boolean if the legend should only be styled to be visible for screen\n   * readers.\n   */\n  legendSROnly?: boolean;\n\n  /**\n   * Boolean if the fieldset should remove the default browser styles of margin,\n   * padding, and border.\n   */\n  unstyled?: boolean;\n}\n\nconst block = bem(\"rmd-fieldset\");\n\n/**\n * This is a simple wrapper for the `<fieldset>` that defaults to removing\n * the default styles of a border, padding, and margin and having a screen-reader\n * visible only legend element for added accessibility.\n */\nexport const Fieldset = forwardRef<HTMLFieldSetElement, FieldsetProps>(\n  function Fieldset(\n    {\n      className,\n      legend,\n      legendStyle,\n      legendClassName,\n      legendSROnly = false,\n      unstyled = true,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <fieldset\n        {...props}\n        ref={ref}\n        className={cn(block({ unstyled }), className)}\n      >\n        <legend\n          style={legendStyle}\n          className={cn(\n            block(\"legend\", { \"sr-only\": legendSROnly }),\n            legendClassName\n          )}\n        >\n          {legend}\n        </legend>\n        {children}\n      </fieldset>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}