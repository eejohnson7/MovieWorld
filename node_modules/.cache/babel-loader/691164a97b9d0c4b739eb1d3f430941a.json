{"ast":null,"code":"import { useEffect } from \"react\";\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @internal\n */\nexport function useWindowBlurPause(_a) {\n  var startTimer = _a.startTimer,\n    stopTimer = _a.stopTimer,\n    visible = _a.visible,\n    message = _a.message,\n    _b = _a.disabled,\n    disabled = _b === void 0 ? false : _b;\n  useEffect(function () {\n    if (disabled || !visible || !message || message.disableAutohide) {\n      return;\n    }\n    var handleFocusEvent = function (event) {\n      if (event.type === \"focus\") {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n    window.addEventListener(\"blur\", handleFocusEvent);\n    window.addEventListener(\"focus\", handleFocusEvent);\n    return function () {\n      window.removeEventListener(\"blur\", handleFocusEvent);\n      window.removeEventListener(\"focus\", handleFocusEvent);\n    };\n  }, [disabled, startTimer, stopTimer, visible, message]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AAYjC;;;;;;;;;AASA,OAAM,SAAUC,kBAAkB,CAACC,EAMzB;MALRC,UAAU;IACVC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,gBAAgB;IAAhBC,QAAQ,mBAAG,KAAK;EAEhBR,SAAS,CAAC;IACR,IAAIQ,QAAQ,IAAI,CAACH,OAAO,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACG,eAAe,EAAE;MAC/D;;IAGF,IAAMC,gBAAgB,GAAG,UAACC,KAAY;MACpC,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;QAC1BT,UAAU,EAAE;OACb,MAAM;QACLC,SAAS,EAAE;;IAEf,CAAC;IAEDS,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAEJ,gBAAgB,CAAC;IACjDG,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,gBAAgB,CAAC;IAClD,OAAO;MACLG,MAAM,CAACE,mBAAmB,CAAC,MAAM,EAAEL,gBAAgB,CAAC;MACpDG,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEL,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACF,QAAQ,EAAEL,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;AACzD","names":["useEffect","useWindowBlurPause","_a","startTimer","stopTimer","visible","message","_b","disabled","disableAutohide","handleFocusEvent","event","type","window","addEventListener","removeEventListener"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/alert/src/useWindowBlurPause.ts"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport type { Message } from \"./MessageQueueContext\";\n\ninterface Options {\n  startTimer: () => void;\n  stopTimer: () => void;\n  visible: boolean;\n  message: Message | undefined;\n  disabled?: boolean;\n}\n\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @internal\n */\nexport function useWindowBlurPause({\n  startTimer,\n  stopTimer,\n  visible,\n  message,\n  disabled = false,\n}: Options): void {\n  useEffect(() => {\n    if (disabled || !visible || !message || message.disableAutohide) {\n      return;\n    }\n\n    const handleFocusEvent = (event: Event): void => {\n      if (event.type === \"focus\") {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    window.addEventListener(\"blur\", handleFocusEvent);\n    window.addEventListener(\"focus\", handleFocusEvent);\n    return () => {\n      window.removeEventListener(\"blur\", handleFocusEvent);\n      window.removeEventListener(\"focus\", handleFocusEvent);\n    };\n  }, [disabled, startTimer, stopTimer, visible, message]);\n}\n"]},"metadata":{},"sourceType":"module"}