{"ast":null,"code":"/**\n * An extremely simple util that can be used to get the required a11y props for\n * another component that relies on a progress component.\n *\n * @param progressId - The id for the progress bar\n * @param progressing - Boolean if the progress bar is visible and progressing\n */\nexport function getProgressA11y(progressId, progressing) {\n  if (!progressing) {\n    return undefined;\n  }\n  return {\n    \"aria-busy\": true,\n    \"aria-describedby\": progressId\n  };\n}","map":{"version":3,"mappings":"AAKA;;;;;;;AAOA,OAAM,SAAUA,eAAe,CAC7BC,UAAkB,EAClBC,WAAoB;EAEpB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAOC,SAAS;;EAGlB,OAAO;IACL,WAAW,EAAE,IAAI;IACjB,kBAAkB,EAAEF;GACrB;AACH","names":["getProgressA11y","progressId","progressing","undefined"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/progress/src/getProgressA11y.ts"],"sourcesContent":["export interface ProgressA11y {\n  \"aria-busy\": true;\n  \"aria-describedby\": string;\n}\n\n/**\n * An extremely simple util that can be used to get the required a11y props for\n * another component that relies on a progress component.\n *\n * @param progressId - The id for the progress bar\n * @param progressing - Boolean if the progress bar is visible and progressing\n */\nexport function getProgressA11y(\n  progressId: string,\n  progressing: boolean\n): ProgressA11y | undefined {\n  if (!progressing) {\n    return undefined;\n  }\n\n  return {\n    \"aria-busy\": true,\n    \"aria-describedby\": progressId,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}