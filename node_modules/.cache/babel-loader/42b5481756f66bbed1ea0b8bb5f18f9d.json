{"ast":null,"code":"/**\n * A simple util to convert a unit that is using `px`, `em`, or `rem` to a\n * number so that calculations can be made on that unit.\n *\n * @param unit - The unit to convert to a number\n * @param element - The element to use to use for calculating `em`\n * @returns the unit as a number\n */\nexport function unitToNumber(unit, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.fontSizeFallback,\n    fontSizeFallback = _a === void 0 ? 16 : _a,\n    element = options.element;\n  if (typeof unit === \"number\") {\n    return unit;\n  }\n  var parsed = parseFloat(unit);\n  if (/px$/.test(unit)) {\n    return parsed;\n  }\n  if (typeof document === \"undefined\") {\n    return parsed * fontSizeFallback;\n  }\n  var rem = /rem$/.test(unit);\n  var el = document.documentElement;\n  if (!rem && element) {\n    el = element.parentElement || element;\n  }\n  var fontSize = parseFloat(window.getComputedStyle(el).fontSize || \"\".concat(fontSizeFallback, \"px\"));\n  return parsed * fontSize;\n}","map":{"version":3,"mappings":"AAIA;;;;;;;;AAQA,OAAM,SAAUA,YAAY,CAC1BC,IAAqB,EACrBC,OAAiC;EAAjC;IAAAA,YAAiC;EAAA;EAEzB,SAAmCA,OAAO,iBAArB;IAArBC,gBAAgB,mBAAG,EAAE;IAAEC,OAAO,GAAKF,OAAO,QAAZ;EACtC,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOA,IAAI;;EAGb,IAAMI,MAAM,GAAGC,UAAU,CAACL,IAAI,CAAC;EAC/B,IAAI,KAAK,CAACM,IAAI,CAACN,IAAI,CAAC,EAAE;IACpB,OAAOI,MAAM;;EAGf,IAAI,OAAOG,QAAQ,KAAK,WAAW,EAAE;IACnC,OAAOH,MAAM,GAAGF,gBAAgB;;EAGlC,IAAMM,GAAG,GAAG,MAAM,CAACF,IAAI,CAACN,IAAI,CAAC;EAC7B,IAAIS,EAAE,GAA0BF,QAAQ,CAACG,eAA8B;EACvE,IAAI,CAACF,GAAG,IAAIL,OAAO,EAAE;IACnBM,EAAE,GAAGN,OAAO,CAACQ,aAAa,IAAIR,OAAO;;EAGvC,IAAMS,QAAQ,GAAGP,UAAU,CACzBQ,MAAM,CAACC,gBAAgB,CAACL,EAAE,CAAC,CAACG,QAAQ,IAAI,UAAGV,gBAAgB,OAAI,CAChE;EAED,OAAOE,MAAM,GAAGQ,QAAQ;AAC1B","names":["unitToNumber","unit","options","fontSizeFallback","element","parsed","parseFloat","test","document","rem","el","documentElement","parentElement","fontSize","window","getComputedStyle"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/utils/src/unitToNumber.ts"],"sourcesContent":["export interface UnitToNumberOptions {\n  element?: Element;\n  fontSizeFallback?: number;\n}\n/**\n * A simple util to convert a unit that is using `px`, `em`, or `rem` to a\n * number so that calculations can be made on that unit.\n *\n * @param unit - The unit to convert to a number\n * @param element - The element to use to use for calculating `em`\n * @returns the unit as a number\n */\nexport function unitToNumber(\n  unit: string | number,\n  options: UnitToNumberOptions = {}\n): number {\n  const { fontSizeFallback = 16, element } = options;\n  if (typeof unit === \"number\") {\n    return unit;\n  }\n\n  const parsed = parseFloat(unit);\n  if (/px$/.test(unit)) {\n    return parsed;\n  }\n\n  if (typeof document === \"undefined\") {\n    return parsed * fontSizeFallback;\n  }\n\n  const rem = /rem$/.test(unit);\n  let el: HTMLElement | Element = document.documentElement as HTMLElement;\n  if (!rem && element) {\n    el = element.parentElement || element;\n  }\n\n  const fontSize = parseFloat(\n    window.getComputedStyle(el).fontSize || `${fontSizeFallback}px`\n  );\n\n  return parsed * fontSize;\n}\n"]},"metadata":{},"sourceType":"module"}