{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { useUserInteractionMode } from \"@react-md/utils\";\nimport { useMenuBarContext } from \"./MenuBarProvider\";\nimport { MenuButton } from \"./MenuButton\";\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\nimport { MenuItemButton } from \"./MenuItemButton\";\nimport { MenuRenderer } from \"./MenuRenderer\";\nimport { MenuVisibilityProvider } from \"./MenuVisibilityProvider\";\nimport { useMenu } from \"./useMenu\";\n/**\n * This component is a preset for creating dropdown menus using the\n * {@link useMenu} hook which provides the visibility behavior and other\n * functionality for menus. This will render as a `<Button>` by default but can\n * be rendered as a `<MenuItem>` by existing as a child of another\n * `DropdownMenu`.\n *\n * Most of the top-level props will be passed directly to the `Button` or\n * `MenuItem` components with the exception for the `children`. The children for\n * the `Button` or `MenuItem` can be set with the `buttonChildren` prop since\n * the main `children` should be the `Menu`'s children.\n *\n * @example\n * Simple Example\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * Nested Dropdown Menus\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *       <DropdownMenu\n *         id=\"nested-dropdown-menu\"\n *         buttonChildren=\"Nested Dropdown\"\n *       >\n *         <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *           Nested Item 1\n *         </MenuItem>\n *         <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *           Nested Item 2\n *         </MenuItem>\n *       </DropdownMenu>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport function DropdownMenu(_a) {\n  var _b;\n  var id = _a.id,\n    onClick = _a.onClick,\n    onKeyDown = _a.onKeyDown,\n    onMouseEnter = _a.onMouseEnter,\n    onMouseLeave = _a.onMouseLeave,\n    menuLabel = _a.menuLabel,\n    propMenuProps = _a.menuProps,\n    menuStyle = _a.menuStyle,\n    menuClassName = _a.menuClassName,\n    sheetProps = _a.sheetProps,\n    sheetMenuProps = _a.sheetMenuProps,\n    sheetStyle = _a.sheetStyle,\n    sheetClassName = _a.sheetClassName,\n    propSheetHeader = _a.sheetHeader,\n    propSheetFooter = _a.sheetFooter,\n    propRenderAsSheet = _a.renderAsSheet,\n    propSheetPosition = _a.sheetPosition,\n    propSheetVerticalSize = _a.sheetVerticalSize,\n    listStyle = _a.listStyle,\n    listClassName = _a.listClassName,\n    listProps = _a.listProps,\n    appear = _a.appear,\n    enter = _a.enter,\n    exit = _a.exit,\n    propTimeout = _a.timeout,\n    classNames = _a.classNames,\n    anchor = _a.anchor,\n    fixedPositionOptions = _a.fixedPositionOptions,\n    getFixedPositionOptions = _a.getFixedPositionOptions,\n    temporary = _a.temporary,\n    portal = _a.portal,\n    portalInto = _a.portalInto,\n    portalIntoId = _a.portalIntoId,\n    onEnter = _a.onEnter,\n    onEntering = _a.onEntering,\n    onEntered = _a.onEntered,\n    onExit = _a.onExit,\n    onExiting = _a.onExiting,\n    onExited = _a.onExited,\n    propHorizontal = _a.horizontal,\n    children = _a.children,\n    preventScroll = _a.preventScroll,\n    closeOnResize = _a.closeOnResize,\n    closeOnScroll = _a.closeOnScroll,\n    propIconRotatorProps = _a.iconRotatorProps,\n    propDisableFocusOnMount = _a.disableFocusOnMount,\n    propDisableFocusOnUnmount = _a.disableFocusOnUnmount,\n    props = __rest(_a, [\"id\", \"onClick\", \"onKeyDown\", \"onMouseEnter\", \"onMouseLeave\", \"menuLabel\", \"menuProps\", \"menuStyle\", \"menuClassName\", \"sheetProps\", \"sheetMenuProps\", \"sheetStyle\", \"sheetClassName\", \"sheetHeader\", \"sheetFooter\", \"renderAsSheet\", \"sheetPosition\", \"sheetVerticalSize\", \"listStyle\", \"listClassName\", \"listProps\", \"appear\", \"enter\", \"exit\", \"timeout\", \"classNames\", \"anchor\", \"fixedPositionOptions\", \"getFixedPositionOptions\", \"temporary\", \"portal\", \"portalInto\", \"portalIntoId\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"horizontal\", \"children\", \"preventScroll\", \"closeOnResize\", \"closeOnScroll\", \"iconRotatorProps\", \"disableFocusOnMount\", \"disableFocusOnUnmount\"]);\n  var disabled = props.disabled;\n  var _c = useMenuConfiguration({\n      horizontal: propHorizontal,\n      sheetFooter: propSheetFooter,\n      sheetHeader: propSheetHeader,\n      renderAsSheet: propRenderAsSheet,\n      sheetPosition: propSheetPosition,\n      sheetVerticalSize: propSheetVerticalSize\n    }),\n    horizontal = _c.horizontal,\n    sheetHeader = _c.sheetHeader,\n    sheetFooter = _c.sheetFooter,\n    renderAsSheet = _c.renderAsSheet,\n    sheetPosition = _c.sheetPosition,\n    sheetVerticalSize = _c.sheetVerticalSize;\n  var mode = useUserInteractionMode();\n  var mouse = mode === \"mouse\";\n  var keyboard = mode === \"keyboard\";\n  var _d = useMenuBarContext(),\n    root = _d.root,\n    menubar = _d.menubar,\n    menuitem = _d.menuitem,\n    activeId = _d.activeId,\n    animatedOnce = _d.animatedOnce;\n  var disableTransition = animatedOnce && menubar && !!activeId && (mouse || keyboard);\n  var timeout = propTimeout !== null && propTimeout !== void 0 ? propTimeout : disableTransition ? 0 : undefined;\n  var disableFocusOnMount = propDisableFocusOnMount !== null && propDisableFocusOnMount !== void 0 ? propDisableFocusOnMount : mouse && timeout === 0;\n  var disableFocusOnUnmount = propDisableFocusOnUnmount !== null && propDisableFocusOnUnmount !== void 0 ? propDisableFocusOnUnmount : mouse && timeout === 0;\n  var iconRotatorProps = propIconRotatorProps;\n  if (disableTransition) {\n    iconRotatorProps = __assign({\n      animate: false\n    }, propIconRotatorProps);\n  }\n  var floating = null;\n  if (!menuitem) {\n    _b = props.floating, floating = _b === void 0 ? null : _b;\n  }\n  var _e = __read(useState(false), 2),\n    visible = _e[0],\n    setVisible = _e[1];\n  var _f = useMenu({\n      baseId: id,\n      visible: visible,\n      setVisible: setVisible,\n      disabled: disabled,\n      menuLabel: menuLabel,\n      horizontal: horizontal,\n      onToggleClick: onClick,\n      onToggleKeyDown: onKeyDown,\n      onToggleMouseEnter: onMouseEnter,\n      onToggleMouseLeave: onMouseLeave,\n      onMenuClick: propMenuProps === null || propMenuProps === void 0 ? void 0 : propMenuProps.onClick,\n      onMenuKeyDown: propMenuProps === null || propMenuProps === void 0 ? void 0 : propMenuProps.onKeyDown,\n      floating: floating,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExited: onExited,\n      anchor: anchor,\n      style: menuStyle,\n      fixedPositionOptions: fixedPositionOptions,\n      getFixedPositionOptions: getFixedPositionOptions,\n      menuitem: !root && menuitem,\n      preventScroll: preventScroll,\n      closeOnResize: closeOnResize,\n      closeOnScroll: closeOnScroll,\n      disableFocusOnMount: disableFocusOnMount,\n      disableFocusOnUnmount: disableFocusOnUnmount\n    }),\n    menuRef = _f.menuRef,\n    menuProps = _f.menuProps,\n    toggleRef = _f.toggleRef,\n    toggleProps = _f.toggleProps;\n  var toggle;\n  if (menuitem) {\n    // see `DropdownMenuProps` about this typecast\n    var _g = props,\n      buttonChildren = _g.buttonChildren,\n      itemProps = __rest(_g, [\"buttonChildren\"]);\n    toggle = _jsx(MenuItemButton, __assign({}, itemProps, {\n      iconRotatorProps: iconRotatorProps\n    }, toggleProps, {\n      ref: toggleRef,\n      visible: visible\n    }, {\n      children: buttonChildren\n    }));\n  } else {\n    // see `DropdownMenuProps` about this typecast\n    var _h = props,\n      buttonChildren = _h.buttonChildren,\n      buttonProps = __rest(_h, [\"buttonChildren\"]);\n    toggle = _jsx(MenuButton, __assign({}, buttonProps, {\n      iconRotatorProps: iconRotatorProps\n    }, toggleProps, {\n      ref: toggleRef,\n      visible: visible\n    }, {\n      children: buttonChildren\n    }));\n  }\n  return _jsxs(MenuVisibilityProvider, __assign({\n    visible: visible,\n    setVisible: setVisible\n  }, {\n    children: [toggle, _jsx(MenuRenderer, __assign({}, menuProps, {\n      menuRef: menuRef,\n      menuProps: propMenuProps,\n      menuStyle: menuProps.style,\n      menuClassName: menuClassName,\n      sheetProps: sheetProps,\n      sheetStyle: sheetStyle,\n      sheetClassName: sheetClassName,\n      sheetMenuProps: sheetMenuProps,\n      sheetHeader: sheetHeader,\n      sheetFooter: sheetFooter,\n      sheetPosition: sheetPosition,\n      sheetVerticalSize: sheetVerticalSize,\n      listStyle: listStyle,\n      listClassName: listClassName,\n      listProps: listProps,\n      onRequestClose: function () {\n        return setVisible(false);\n      },\n      horizontal: horizontal,\n      renderAsSheet: renderAsSheet,\n      temporary: temporary,\n      portal: portal,\n      portalInto: portalInto,\n      portalIntoId: portalIntoId,\n      appear: appear,\n      enter: enter,\n      exit: exit,\n      onExit: onExit,\n      onExiting: onExiting,\n      timeout: timeout,\n      classNames: classNames\n    }, {\n      children: children\n    }))]\n  }));\n}","map":{"version":3,"mappings":"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","names":["useState","useUserInteractionMode","useMenuBarContext","MenuButton","useMenuConfiguration","MenuItemButton","MenuRenderer","MenuVisibilityProvider","useMenu","DropdownMenu","_a","onClick","onKeyDown","onMouseEnter","onMouseLeave","menuLabel","propMenuProps","menuStyle","menuClassName","sheetProps","sheetMenuProps","sheetStyle","sheetClassName","propSheetHeader","propSheetFooter","propRenderAsSheet","propSheetPosition","propSheetVerticalSize","listStyle","listClassName","listProps","appear","enter","exit","propTimeout","classNames","anchor","fixedPositionOptions","getFixedPositionOptions","temporary","portal","portalInto","portalIntoId","onEnter","onEntering","onEntered","onExit","onExiting","onExited","propHorizontal","children","preventScroll","closeOnResize","closeOnScroll","propIconRotatorProps","propDisableFocusOnMount","propDisableFocusOnUnmount","props","horizontal","sheetFooter","sheetHeader","renderAsSheet","sheetPosition","sheetVerticalSize","mode","mouse","keyboard","root","menubar","menuitem","activeId","animatedOnce","disableTransition","timeout","undefined","disableFocusOnMount","disableFocusOnUnmount","iconRotatorProps","animate","floating","_b","visible","setVisible","baseId","id","disabled","onToggleClick","onToggleKeyDown","onToggleMouseEnter","onToggleMouseLeave","onMenuClick","onMenuKeyDown","style","menuRef","menuProps","toggleRef","toggleProps","toggle","_g","buttonChildren","itemProps","_jsx","ref","_h","buttonProps","_jsxs","onRequestClose"],"sources":["/Users/erin/Desktop/finalProg/node_modules/@react-md/menu/src/DropdownMenu.tsx"],"sourcesContent":["import type { ReactElement, RefObject } from \"react\";\nimport { useState } from \"react\";\nimport type { FABPosition } from \"@react-md/button\";\nimport { useUserInteractionMode } from \"@react-md/utils\";\n\nimport { useMenuBarContext } from \"./MenuBarProvider\";\nimport { MenuButton } from \"./MenuButton\";\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\nimport { MenuItemButton } from \"./MenuItemButton\";\nimport { MenuRenderer } from \"./MenuRenderer\";\nimport { MenuVisibilityProvider } from \"./MenuVisibilityProvider\";\nimport type {\n  DropdownMenuButtonProps,\n  DropdownMenuItemProps,\n  DropdownMenuProps,\n} from \"./types\";\nimport { useMenu } from \"./useMenu\";\n\n/**\n * This component is a preset for creating dropdown menus using the\n * {@link useMenu} hook which provides the visibility behavior and other\n * functionality for menus. This will render as a `<Button>` by default but can\n * be rendered as a `<MenuItem>` by existing as a child of another\n * `DropdownMenu`.\n *\n * Most of the top-level props will be passed directly to the `Button` or\n * `MenuItem` components with the exception for the `children`. The children for\n * the `Button` or `MenuItem` can be set with the `buttonChildren` prop since\n * the main `children` should be the `Menu`'s children.\n *\n * @example\n * Simple Example\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * Nested Dropdown Menus\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *       <DropdownMenu\n *         id=\"nested-dropdown-menu\"\n *         buttonChildren=\"Nested Dropdown\"\n *       >\n *         <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *           Nested Item 1\n *         </MenuItem>\n *         <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *           Nested Item 2\n *         </MenuItem>\n *       </DropdownMenu>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport function DropdownMenu({\n  id,\n  onClick,\n  onKeyDown,\n  onMouseEnter,\n  onMouseLeave,\n  menuLabel,\n  menuProps: propMenuProps,\n  menuStyle,\n  menuClassName,\n  sheetProps,\n  sheetMenuProps,\n  sheetStyle,\n  sheetClassName,\n  sheetHeader: propSheetHeader,\n  sheetFooter: propSheetFooter,\n  renderAsSheet: propRenderAsSheet,\n  sheetPosition: propSheetPosition,\n  sheetVerticalSize: propSheetVerticalSize,\n  listStyle,\n  listClassName,\n  listProps,\n  appear,\n  enter,\n  exit,\n  timeout: propTimeout,\n  classNames,\n  anchor,\n  fixedPositionOptions,\n  getFixedPositionOptions,\n  temporary,\n  portal,\n  portalInto,\n  portalIntoId,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  horizontal: propHorizontal,\n  children,\n  preventScroll,\n  closeOnResize,\n  closeOnScroll,\n  iconRotatorProps: propIconRotatorProps,\n  disableFocusOnMount: propDisableFocusOnMount,\n  disableFocusOnUnmount: propDisableFocusOnUnmount,\n  ...props\n}: DropdownMenuProps): ReactElement {\n  const { disabled } = props;\n  const {\n    horizontal,\n    sheetHeader,\n    sheetFooter,\n    renderAsSheet,\n    sheetPosition,\n    sheetVerticalSize,\n  } = useMenuConfiguration({\n    horizontal: propHorizontal,\n    sheetFooter: propSheetFooter,\n    sheetHeader: propSheetHeader,\n    renderAsSheet: propRenderAsSheet,\n    sheetPosition: propSheetPosition,\n    sheetVerticalSize: propSheetVerticalSize,\n  });\n\n  const mode = useUserInteractionMode();\n  const mouse = mode === \"mouse\";\n  const keyboard = mode === \"keyboard\";\n  const { root, menubar, menuitem, activeId, animatedOnce } =\n    useMenuBarContext();\n\n  const disableTransition =\n    animatedOnce && menubar && !!activeId && (mouse || keyboard);\n  const timeout = propTimeout ?? (disableTransition ? 0 : undefined);\n  const disableFocusOnMount =\n    propDisableFocusOnMount ?? (mouse && timeout === 0);\n  const disableFocusOnUnmount =\n    propDisableFocusOnUnmount ?? (mouse && timeout === 0);\n\n  let iconRotatorProps = propIconRotatorProps;\n  if (disableTransition) {\n    iconRotatorProps = {\n      animate: false,\n      ...propIconRotatorProps,\n    };\n  }\n\n  let floating: FABPosition = null;\n  if (!menuitem) {\n    ({ floating = null } = props as DropdownMenuButtonProps);\n  }\n\n  const [visible, setVisible] = useState(false);\n  const { menuRef, menuProps, toggleRef, toggleProps } = useMenu<\n    HTMLButtonElement | HTMLLIElement\n  >({\n    baseId: id,\n    visible,\n    setVisible,\n    disabled,\n    menuLabel,\n    horizontal,\n    onToggleClick: onClick,\n    onToggleKeyDown: onKeyDown,\n    onToggleMouseEnter: onMouseEnter,\n    onToggleMouseLeave: onMouseLeave,\n    onMenuClick: propMenuProps?.onClick,\n    onMenuKeyDown: propMenuProps?.onKeyDown,\n    floating,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExited,\n    anchor,\n    style: menuStyle,\n    fixedPositionOptions,\n    getFixedPositionOptions,\n    menuitem: !root && menuitem,\n    preventScroll,\n    closeOnResize,\n    closeOnScroll,\n    disableFocusOnMount,\n    disableFocusOnUnmount,\n  });\n\n  let toggle: ReactElement;\n  if (menuitem) {\n    // see `DropdownMenuProps` about this typecast\n    const { buttonChildren, ...itemProps } = props as DropdownMenuItemProps;\n    toggle = (\n      <MenuItemButton\n        {...itemProps}\n        iconRotatorProps={iconRotatorProps}\n        {...toggleProps}\n        ref={toggleRef as RefObject<HTMLLIElement>}\n        visible={visible}\n      >\n        {buttonChildren}\n      </MenuItemButton>\n    );\n  } else {\n    // see `DropdownMenuProps` about this typecast\n    const { buttonChildren, ...buttonProps } = props as DropdownMenuButtonProps;\n    toggle = (\n      <MenuButton\n        {...buttonProps}\n        iconRotatorProps={iconRotatorProps}\n        {...toggleProps}\n        ref={toggleRef as RefObject<HTMLButtonElement>}\n        visible={visible}\n      >\n        {buttonChildren}\n      </MenuButton>\n    );\n  }\n\n  return (\n    <MenuVisibilityProvider visible={visible} setVisible={setVisible}>\n      {toggle}\n      <MenuRenderer\n        {...menuProps}\n        menuRef={menuRef}\n        menuProps={propMenuProps}\n        menuStyle={menuProps.style}\n        menuClassName={menuClassName}\n        sheetProps={sheetProps}\n        sheetStyle={sheetStyle}\n        sheetClassName={sheetClassName}\n        sheetMenuProps={sheetMenuProps}\n        sheetHeader={sheetHeader}\n        sheetFooter={sheetFooter}\n        sheetPosition={sheetPosition}\n        sheetVerticalSize={sheetVerticalSize}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        listProps={listProps}\n        onRequestClose={() => setVisible(false)}\n        horizontal={horizontal}\n        renderAsSheet={renderAsSheet}\n        temporary={temporary}\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n        appear={appear}\n        enter={enter}\n        exit={exit}\n        onExit={onExit}\n        onExiting={onExiting}\n        timeout={timeout}\n        classNames={classNames}\n      >\n        {children}\n      </MenuRenderer>\n    </MenuVisibilityProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}